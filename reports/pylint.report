************* Module fundamentals
fundamentals/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module fundamentals.docstring_test
fundamentals/docstring_test.py:4:0: C0301: Line too long (158/100) (line-too-long)
fundamentals/docstring_test.py:14:0: C0301: Line too long (134/100) (line-too-long)
fundamentals/docstring_test.py:21:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:26:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:44:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:78:0: C0301: Line too long (463/100) (line-too-long)
fundamentals/docstring_test.py:82:53: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:166:0: C0301: Line too long (101/100) (line-too-long)
fundamentals/docstring_test.py:181:43: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:191:29: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:196:68: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:212:17: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:213:0: C0301: Line too long (116/100) (line-too-long)
fundamentals/docstring_test.py:215:20: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:218:0: C0301: Line too long (111/100) (line-too-long)
fundamentals/docstring_test.py:227:220: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/docstring_test.py:227:0: C0301: Line too long (220/100) (line-too-long)
fundamentals/docstring_test.py:8:4014: W1401: Anomalous backslash in string: '\p'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/docstring_test.py:8:4059: W1401: Anomalous backslash in string: '\p'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/docstring_test.py:244:4: C0415: Import outside toplevel (os) (import-outside-toplevel)
fundamentals/docstring_test.py:245:4: C0103: Variable name "rootPath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/docstring_test.py:7:18: W0613: Unused argument 'self' (unused-argument)
************* Module fundamentals.tools
fundamentals/tools.py:44:0: C0301: Line too long (139/100) (line-too-long)
fundamentals/tools.py:45:0: C0301: Line too long (108/100) (line-too-long)
fundamentals/tools.py:47:0: C0301: Line too long (152/100) (line-too-long)
fundamentals/tools.py:48:0: C0301: Line too long (158/100) (line-too-long)
fundamentals/tools.py:49:0: C0301: Line too long (110/100) (line-too-long)
fundamentals/tools.py:50:0: C0301: Line too long (208/100) (line-too-long)
fundamentals/tools.py:82:91: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/tools.py:93:0: C0301: Line too long (125/100) (line-too-long)
fundamentals/tools.py:96:0: C0301: Line too long (107/100) (line-too-long)
fundamentals/tools.py:99:0: C0301: Line too long (489/100) (line-too-long)
fundamentals/tools.py:100:0: C0301: Line too long (102/100) (line-too-long)
fundamentals/tools.py:200:0: C0301: Line too long (318/100) (line-too-long)
fundamentals/tools.py:280:0: C0301: Line too long (160/100) (line-too-long)
fundamentals/tools.py:370:0: C0301: Line too long (116/100) (line-too-long)
fundamentals/tools.py:375:0: C0301: Line too long (101/100) (line-too-long)
fundamentals/tools.py:458:0: C0301: Line too long (107/100) (line-too-long)
fundamentals/tools.py:526:0: C0301: Line too long (106/100) (line-too-long)
fundamentals/tools.py:17:0: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:19:0: C0413: Import "from collections import OrderedDict" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:20:0: C0413: Import "import shutil" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:21:0: C0413: Import "from subprocess import Popen, PIPE, STDOUT" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:22:0: C0413: Import "from . import logs as dl" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:23:0: C0413: Import "import time" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:24:0: C0413: Import "from docopt import docopt" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:29:0: C0413: Import "from os.path import expanduser" should be placed at the top of the module (wrong-import-position)
fundamentals/tools.py:36:0: C0103: Class name "tools" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/tools.py:136:8: C0103: Attribute name "docString" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:137:8: C0103: Attribute name "logLevel" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:387:12: C0103: Attribute name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:509:8: C0103: Attribute name "remoteDBConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:36:0: R0205: Class 'tools' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/tools.py:221:16: W0621: Redefining name 'yaml' from outer scope (line 14) (redefined-outer-name)
fundamentals/tools.py:124:4: R0913: Too many arguments (9/5) (too-many-arguments)
fundamentals/tools.py:124:4: R0914: Too many local variables (52/15) (too-many-locals)
fundamentals/tools.py:139:8: C0415: Import outside toplevel (psutil) (import-outside-toplevel)
fundamentals/tools.py:148:8: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:146:12: C0415: Import outside toplevel (pkg_resources) (import-outside-toplevel)
fundamentals/tools.py:153:11: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/tools.py:163:12: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:166:12: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:171:16: C0103: Variable name "thisId" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:178:8: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:183:40: C0103: Variable name "settingsFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:200:13: R0916: Too many boolean expressions in if statement (8/5) (too-many-boolean-expressions)
fundamentals/tools.py:200:46: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/tools.py:200:125: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/tools.py:200:202: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/tools.py:200:277: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/tools.py:202:15: C0121: Comparison to False should be 'expr' (singleton-comparison)
fundamentals/tools.py:204:16: C0103: Variable name "projectDir" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:211:16: C0103: Variable name "settingsFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:217:20: C0415: Import outside toplevel (codecs) (import-outside-toplevel)
fundamentals/tools.py:218:20: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:221:16: W0404: Reimport 'yaml' (imported line 14) (reimported)
fundamentals/tools.py:221:16: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
fundamentals/tools.py:224:43: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:239:20: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
fundamentals/tools.py:240:20: C0103: Variable name "ds" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:244:41: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/tools.py:249:28: C0103: Variable name "ds" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:293:20: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:255:24: C0415: Import outside toplevel (codecs) (import-outside-toplevel)
fundamentals/tools.py:256:24: C0103: Variable name "pathToReadFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:258:28: C0103: Variable name "readFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:260:28: C0103: Variable name "thisData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:262:24: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:266:24: C0103: Variable name "thisData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:269:24: C0103: Variable name "pathToWriteFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:271:28: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:273:24: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:285:24: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:283:28: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:291:24: W0702: No exception type(s) specified (bare-except)
fundamentals/tools.py:289:28: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:301:12: W0404: Reimport 'yaml' (imported line 14) (reimported)
fundamentals/tools.py:301:12: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
fundamentals/tools.py:354:16: W0122: Use of exec (exec-used)
fundamentals/tools.py:356:16: W0122: Use of exec (exec-used)
fundamentals/tools.py:358:16: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:361:8: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:363:68: E0602: Undefined variable 'hostFlag' (undefined-variable)
fundamentals/tools.py:365:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:369:12: C0103: Variable name "dbName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:374:12: C0103: Variable name "dbName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:377:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:391:12: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/tools.py:392:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:171:16: W0641: Possibly unused variable 'thisId' (possibly-unused-variable)
fundamentals/tools.py:262:24: W0641: Possibly unused variable 'e' (possibly-unused-variable)
fundamentals/tools.py:283:28: W0641: Possibly unused variable 'p' (possibly-unused-variable)
fundamentals/tools.py:124:4: R0912: Too many branches (57/12) (too-many-branches)
fundamentals/tools.py:124:4: R0915: Too many statements (184/50) (too-many-statements)
fundamentals/tools.py:424:8: W0621: Redefining name 'Popen' from outer scope (line 21) (redefined-outer-name)
fundamentals/tools.py:424:8: W0621: Redefining name 'PIPE' from outer scope (line 21) (redefined-outer-name)
fundamentals/tools.py:424:8: W0621: Redefining name 'STDOUT' from outer scope (line 21) (redefined-outer-name)
fundamentals/tools.py:419:4: R0914: Too many local variables (19/15) (too-many-locals)
fundamentals/tools.py:424:8: W0404: Reimport 'Popen' (imported line 21) (reimported)
fundamentals/tools.py:424:8: W0404: Reimport 'PIPE' (imported line 21) (reimported)
fundamentals/tools.py:424:8: W0404: Reimport 'STDOUT' (imported line 21) (reimported)
fundamentals/tools.py:424:8: C0415: Import outside toplevel (subprocess) (import-outside-toplevel)
fundamentals/tools.py:425:8: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/tools.py:430:12: C0103: Variable name "sshPort" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:437:16: C0103: Variable name "ru" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:439:16: C0103: Variable name "rh" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:442:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:454:24: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/tools.py:460:12: C0103: Variable name "sshPort" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:467:16: C0103: Variable name "ru" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:470:16: C0103: Variable name "rh" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:474:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:486:24: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/tools.py:494:8: C0103: Variable name "dbName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:495:8: C0103: Variable name "thisConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:419:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/tools.py:437:16: W0641: Possibly unused variable 'ru' (possibly-unused-variable)
fundamentals/tools.py:438:16: W0641: Possibly unused variable 'rip' (possibly-unused-variable)
fundamentals/tools.py:439:16: W0641: Possibly unused variable 'rh' (possibly-unused-variable)
fundamentals/tools.py:443:16: W0641: Possibly unused variable 'output' (possibly-unused-variable)
fundamentals/tools.py:424:8: W0641: Possibly unused variable 'PIPE' (possibly-unused-variable)
fundamentals/tools.py:424:8: W0641: Possibly unused variable 'STDOUT' (possibly-unused-variable)
fundamentals/tools.py:513:4: C0103: Method name "_checkServer" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:518:8: C0415: Import outside toplevel (socket) (import-outside-toplevel)
fundamentals/tools.py:519:8: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:524:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:525:12: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/tools.py:524:8: W0641: Possibly unused variable 'e' (possibly-unused-variable)
fundamentals/tools.py:36:0: R0903: Too few public methods (1/2) (too-few-public-methods)
fundamentals/tools.py:539:0: C0103: Argument name "Loader" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tools.py:539:0: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/tools.py:540:4: C0115: Missing class docstring (missing-class-docstring)
fundamentals/tools.py:540:4: R0901: Too many ancestors (12/7) (too-many-ancestors)
fundamentals/tools.py:552:4: E0602: Undefined variable 'main' (undefined-variable)
fundamentals/tools.py:21:0: W0611: Unused STDOUT imported from subprocess (unused-import)
fundamentals/tools.py:19:0: C0411: standard import "from collections import OrderedDict" should be placed before "import yaml" (wrong-import-order)
fundamentals/tools.py:20:0: C0411: standard import "import shutil" should be placed before "import yaml" (wrong-import-order)
fundamentals/tools.py:21:0: C0411: standard import "from subprocess import Popen, PIPE, STDOUT" should be placed before "import yaml" (wrong-import-order)
fundamentals/tools.py:23:0: C0411: standard import "import time" should be placed before "import yaml" (wrong-import-order)
fundamentals/tools.py:24:0: C0411: third party import "from docopt import docopt" should be placed before "import yaml" (wrong-import-order)
fundamentals/tools.py:29:0: C0411: standard import "from os.path import expanduser" should be placed before "from docopt import docopt" (wrong-import-order)
************* Module fundamentals.__version__
fundamentals/__version__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module fundamentals.cl_utils
fundamentals/cl_utils.py:8:42: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/cl_utils.py:33:0: C0301: Line too long (120/100) (line-too-long)
fundamentals/cl_utils.py:19:0: C0413: Import "import readline" should be placed at the top of the module (wrong-import-position)
fundamentals/cl_utils.py:20:0: C0413: Import "import glob" should be placed at the top of the module (wrong-import-position)
fundamentals/cl_utils.py:21:0: C0413: Import "import pickle" should be placed at the top of the module (wrong-import-position)
fundamentals/cl_utils.py:22:0: C0413: Import "from docopt import docopt" should be placed at the top of the module (wrong-import-position)
fundamentals/cl_utils.py:23:0: C0413: Import "from fundamentals import tools, times" should be placed at the top of the module (wrong-import-position)
fundamentals/cl_utils.py:24:0: C0413: Import "from subprocess import Popen, PIPE, STDOUT" should be placed at the top of the module (wrong-import-position)
fundamentals/cl_utils.py:27:0: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/cl_utils.py:31:0: R0914: Too many local variables (25/15) (too-many-locals)
fundamentals/cl_utils.py:36:4: C0103: Variable name "su" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:44:30: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:53:4: C0103: Variable name "a" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:61:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:63:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/cl_utils.py:66:4: C0103: Variable name "startTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:67:4: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/cl_utils.py:75:8: C0103: Variable name "moduleDirectory" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:76:8: C0103: Variable name "pathToPickleFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:81:8: W0702: No exception type(s) specified (bare-except)
fundamentals/cl_utils.py:80:12: C0103: Variable name "previousSettingsExist" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:82:12: C0103: Variable name "previousSettingsExist" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:83:8: C0103: Variable name "previousSettings" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:85:12: C0103: Variable name "previousSettings" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:92:8: C0103: Variable name "pickleMeObjects" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:93:8: C0103: Variable name "pickleMe" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:94:8: C0103: Variable name "theseLocals" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:100:8: C0415: Import outside toplevel (os.path) (import-outside-toplevel)
fundamentals/cl_utils.py:106:8: W0702: No exception type(s) specified (bare-except)
fundamentals/cl_utils.py:105:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:111:8: W0702: No exception type(s) specified (bare-except)
fundamentals/cl_utils.py:110:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:121:4: C0103: Variable name "endTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:122:4: C0103: Variable name "runningTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/cl_utils.py:123:4: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/cl_utils.py:44:15: W0641: Possibly unused variable 'settings' (possibly-unused-variable)
fundamentals/cl_utils.py:75:8: W0641: Possibly unused variable 'moduleDirectory' (possibly-unused-variable)
fundamentals/cl_utils.py:83:8: W0641: Possibly unused variable 'previousSettings' (possibly-unused-variable)
fundamentals/cl_utils.py:102:8: W0641: Possibly unused variable 'filepath' (possibly-unused-variable)
fundamentals/cl_utils.py:105:12: W0641: Possibly unused variable 'p' (possibly-unused-variable)
fundamentals/cl_utils.py:31:0: R0915: Too many statements (55/50) (too-many-statements)
fundamentals/cl_utils.py:16:0: W0611: Unused import sys (unused-import)
fundamentals/cl_utils.py:22:0: W0611: Unused docopt imported from docopt (unused-import)
fundamentals/cl_utils.py:24:0: W0611: Unused STDOUT imported from subprocess (unused-import)
fundamentals/cl_utils.py:24:0: C0411: standard import "from subprocess import Popen, PIPE, STDOUT" should be placed before "from docopt import docopt" (wrong-import-order)
************* Module fundamentals.times
fundamentals/times.py:29:30: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/times.py:94:0: C0301: Line too long (106/100) (line-too-long)
fundamentals/times.py:32:4: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
fundamentals/times.py:32:4: W0611: Unused date imported from datetime (unused-import)
fundamentals/times.py:32:4: W0611: Unused time imported from datetime (unused-import)
fundamentals/times.py:57:4: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
fundamentals/times.py:59:4: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:60:4: R1705: Unnecessary "elif" after "return" (no-else-return)
fundamentals/times.py:38:0: R0911: Too many return statements (8/6) (too-many-return-statements)
fundamentals/times.py:77:0: C0103: Argument name "startDate" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:77:0: C0103: Argument name "endDate" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:100:4: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
fundamentals/times.py:101:4: C0415: Import outside toplevel (dateutil) (import-outside-toplevel)
fundamentals/times.py:112:4: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:114:4: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:116:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:118:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:120:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:122:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:124:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:126:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:130:8: C0103: Variable name "relTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/times.py:10:0: W0611: Unused import sys (unused-import)
************* Module fundamentals.utKit
fundamentals/utKit.py:27:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:31:0: C0301: Line too long (105/100) (line-too-long)
fundamentals/utKit.py:39:26: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:41:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:100:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:133:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:138:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:145:0: C0301: Line too long (108/100) (line-too-long)
fundamentals/utKit.py:150:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/utKit.py:166:0: C0330: Wrong continued indentation (add 16 spaces).
                       "/test_settings.yaml"},
                       ^               | (bad-continuation)
fundamentals/utKit.py:1:0: C0103: Module name "utKit" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:17:0: W0702: No exception type(s) specified (bare-except)
fundamentals/utKit.py:20:0: C0103: Class name "utKit" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/utKit.py:49:8: C0103: Attribute name "moduleDirectory" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:53:8: C0103: Attribute name "pathToInputDir" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:54:8: C0103: Attribute name "pathToOutputDir" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:57:8: C0103: Attribute name "loggerConfig" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:79:8: C0103: Attribute name "dbConfig" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:20:0: R0205: Class 'utKit' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/utKit.py:45:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/utKit.py:89:4: C0103: Method name "setupModule" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:102:8: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/utKit.py:107:12: C0103: Variable name "connDict" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:108:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:121:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:125:4: C0103: Method name "tearDownModule" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:125:4: R0201: Method could be a function (no-self-use)
fundamentals/utKit.py:152:8: W0621: Redefining name 'os' from outer scope (line 11) (redefined-outer-name)
fundamentals/utKit.py:152:8: W0404: Reimport 'os' (imported line 11) (reimported)
fundamentals/utKit.py:152:8: C0415: Import outside toplevel (os) (import-outside-toplevel)
fundamentals/utKit.py:153:8: C0103: Variable name "rootPath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:143:4: R0201: Method could be a function (no-self-use)
fundamentals/utKit.py:161:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/utKit.py:162:8: C0415: Import outside toplevel (fundamentals) (import-outside-toplevel)
fundamentals/utKit.py:163:8: C0103: Variable name "packageDirectory" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:164:8: C0103: Variable name "su" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:173:34: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/utKit.py:173:8: W0612: Unused variable 'arguments' (unused-variable)
fundamentals/utKit.py:173:34: W0612: Unused variable 'dbConn' (unused-variable)
fundamentals/utKit.py:186:4: E0602: Undefined variable 'main' (undefined-variable)
fundamentals/utKit.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/utKit.py:11:0: W0611: Unused import os (unused-import)
************* Module fundamentals.logs
fundamentals/logs.py:16:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    level="WARNING"
    ^   | (bad-continuation)
fundamentals/logs.py:24:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:83:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:88:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:108:0: C0301: Line too long (125/100) (line-too-long)
fundamentals/logs.py:111:0: C0301: Line too long (107/100) (line-too-long)
fundamentals/logs.py:114:0: C0301: Line too long (489/100) (line-too-long)
fundamentals/logs.py:115:0: C0301: Line too long (102/100) (line-too-long)
fundamentals/logs.py:134:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:163:0: C0301: Line too long (121/100) (line-too-long)
fundamentals/logs.py:217:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/logs.py:44:4: W0621: Redefining name 'logging' from outer scope (line 12) (redefined-outer-name)
fundamentals/logs.py:44:4: W0404: Reimport 'logging' (imported line 12) (reimported)
fundamentals/logs.py:44:4: C0415: Import outside toplevel (logging) (import-outside-toplevel)
fundamentals/logs.py:45:4: C0415: Import outside toplevel (logging.config) (import-outside-toplevel)
fundamentals/logs.py:47:4: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
fundamentals/logs.py:50:4: W0702: No exception type(s) specified (bare-except)
fundamentals/logs.py:55:4: C0103: Variable name "loggerConfig" doesn't conform to snake_case naming style (invalid-name)
fundamentals/logs.py:136:4: W0621: Redefining name 'logging' from outer scope (line 12) (redefined-outer-name)
fundamentals/logs.py:136:4: W0404: Reimport 'logging' (imported line 12) (reimported)
fundamentals/logs.py:136:4: C0415: Import outside toplevel (logging) (import-outside-toplevel)
fundamentals/logs.py:137:4: C0415: Import outside toplevel (logging.config) (import-outside-toplevel)
fundamentals/logs.py:138:4: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
fundamentals/logs.py:140:8: C0415: Import outside toplevel (StringIO) (import-outside-toplevel)
fundamentals/logs.py:142:8: C0415: Import outside toplevel (io) (import-outside-toplevel)
fundamentals/logs.py:143:4: C0415: Import outside toplevel (os.path) (import-outside-toplevel)
fundamentals/logs.py:149:28: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
fundamentals/logs.py:154:4: C0103: Variable name "yamlContent" doesn't conform to snake_case naming style (invalid-name)
fundamentals/logs.py:160:8: C0103: Variable name "yamlContent" doesn't conform to snake_case naming style (invalid-name)
fundamentals/logs.py:164:8: C0103: Variable name "loggingDir" doesn't conform to snake_case naming style (invalid-name)
fundamentals/logs.py:191:8: C0103: Variable name "currMode" doesn't conform to snake_case naming style (invalid-name)
fundamentals/logs.py:192:47: E0602: Undefined variable 'stat' (undefined-variable)
fundamentals/logs.py:193:17: E0602: Undefined variable 'stat' (undefined-variable)
fundamentals/logs.py:193:32: E0602: Undefined variable 'stat' (undefined-variable)
fundamentals/logs.py:193:47: E0602: Undefined variable 'stat' (undefined-variable)
fundamentals/logs.py:195:0: E0102: class already defined line 178 (function-redefined)
fundamentals/logs.py:202:14: W0212: Access to a protected member _open of a client class (protected-access)
fundamentals/logs.py:206:0: C0103: Class name "emptyLogger" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/logs.py:206:0: R0205: Class 'emptyLogger' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/logs.py:220:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/logs.py:223:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/logs.py:226:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/logs.py:229:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/logs.py:232:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/logs.py:11:0: W0611: Unused import sys (unused-import)
************* Module fundamentals.fmultiprocess
fundamentals/fmultiprocess.py:34:0: C0301: Line too long (105/100) (line-too-long)
fundamentals/fmultiprocess.py:14:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/fmultiprocess.py:15:0: C0413: Import "from functools import partial" should be placed at the top of the module (wrong-import-position)
fundamentals/fmultiprocess.py:16:0: C0413: Import "import inspect" should be placed at the top of the module (wrong-import-position)
fundamentals/fmultiprocess.py:19:0: C0103: Argument name "inputArray" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:19:0: C0103: Argument name "poolSize" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:54:4: C0415: Import outside toplevel (psutil) (import-outside-toplevel)
fundamentals/fmultiprocess.py:55:4: E0611: No name 'cpu_count' in module 'multiprocess' (no-name-in-module)
fundamentals/fmultiprocess.py:55:4: C0415: Import outside toplevel (multiprocess) (import-outside-toplevel)
fundamentals/fmultiprocess.py:62:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:62:12: E1102: Pool is not callable (not-callable)
fundamentals/fmultiprocess.py:64:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:64:12: E1102: Pool is not callable (not-callable)
fundamentals/fmultiprocess.py:66:4: C0103: Variable name "cpuCount" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:75:16: W1505: Using deprecated method getargspec() (deprecated-method)
fundamentals/fmultiprocess.py:77:8: C0103: Variable name "resultArray" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:80:8: C0103: Variable name "resultArray" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:82:4: C0103: Variable name "resultArray" doesn't conform to snake_case naming style (invalid-name)
fundamentals/fmultiprocess.py:55:4: W0611: Unused cpu_count imported from multiprocess (unused-import)
fundamentals/fmultiprocess.py:11:0: W0611: Unused import sys (unused-import)
fundamentals/fmultiprocess.py:14:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/fmultiprocess.py:11:0: C0411: standard import "import sys" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/fmultiprocess.py:12:0: C0411: standard import "import os" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/fmultiprocess.py:15:0: C0411: standard import "from functools import partial" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/fmultiprocess.py:16:0: C0411: standard import "import inspect" should be placed before "from past.utils import old_div" (wrong-import-order)
************* Module fundamentals.renderer.list_of_dictionaries
fundamentals/renderer/list_of_dictionaries.py:29:0: C0301: Line too long (136/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:35:73: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/renderer/list_of_dictionaries.py:97:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:98:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:152:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:153:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:211:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:212:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:272:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:273:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:329:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:330:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:384:31: C0326: Exactly one space required after comma
                if isinstance(v,  datetime):
                               ^ (bad-whitespace)
fundamentals/renderer/list_of_dictionaries.py:408:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:409:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:470:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:471:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        tableName,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:472:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath=None,
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:473:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        createStatement=None
        ^   | (bad-continuation)
fundamentals/renderer/list_of_dictionaries.py:498:0: C0301: Line too long (240/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:499:0: C0301: Line too long (236/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:500:0: C0301: Line too long (240/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:575:0: C0301: Line too long (127/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:582:0: C0301: Line too long (134/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:585:0: C0301: Line too long (101/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:692:0: C0301: Line too long (164/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:716:0: C0301: Line too long (122/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:717:0: C0301: Line too long (134/100) (line-too-long)
fundamentals/renderer/list_of_dictionaries.py:23:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/renderer/list_of_dictionaries.py:24:0: C0413: Import "from fundamentals.mysql import convert_dictionary_to_mysql_table" should be placed at the top of the module (wrong-import-position)
fundamentals/renderer/list_of_dictionaries.py:27:0: C0103: Class name "list_of_dictionaries" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:79:8: C0103: Attribute name "listOfDictionaries" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:80:8: C0103: Attribute name "reDatetime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:27:0: R0205: Class 'list_of_dictionaries' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/renderer/list_of_dictionaries.py:71:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/renderer/list_of_dictionaries.py:136:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:144:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:195:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:197:24: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:203:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:210:4: C0103: Method name "reST" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:256:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:258:24: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:264:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:313:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:315:24: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:321:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:381:8: C0103: Variable name "dataCopy" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:382:12: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:383:19: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:387:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:394:24: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:400:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:452:8: C0103: Variable name "dataCopy" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:454:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:456:24: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:512:8: W0621: Redefining name 're' from outer scope (line 15) (redefined-outer-name)
fundamentals/renderer/list_of_dictionaries.py:469:4: C0103: Argument name "tableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:469:4: C0103: Argument name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:512:8: W0404: Reimport 're' (imported line 15) (reimported)
fundamentals/renderer/list_of_dictionaries.py:512:8: C0415: Import outside toplevel (re) (import-outside-toplevel)
fundamentals/renderer/list_of_dictionaries.py:518:8: C0103: Variable name "renderedData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:523:24: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:529:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:536:4: C0103: Argument name "csvType" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:536:4: R0914: Too many local variables (19/15) (too-many-locals)
fundamentals/renderer/list_of_dictionaries.py:553:8: C0415: Import outside toplevel (unicodecsv) (import-outside-toplevel)
fundamentals/renderer/list_of_dictionaries.py:555:11: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:558:8: C0103: Variable name "dataCopy" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:560:8: C0103: Variable name "tableColumnNames" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:561:8: C0103: Variable name "columnWidths" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:581:12: C0103: Variable name "dividerWriter" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:584:12: C0103: Variable name "dividerWriter" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:589:8: C0103: Variable name "rstDivider" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:590:8: C0103: Variable name "allRows" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:594:16: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:595:19: R1701: Consider merging these isinstance calls to isinstance(row[c], (Decimal, float)) (consider-merging-isinstance)
fundamentals/renderer/list_of_dictionaries.py:598:20: C0103: Variable name "thisDate" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:603:19: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:613:15: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:630:12: C0103: Variable name "thisRow" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:635:19: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:637:23: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/renderer/list_of_dictionaries.py:598:20: W0641: Possibly unused variable 'thisDate' (possibly-unused-variable)
fundamentals/renderer/list_of_dictionaries.py:536:4: R0912: Too many branches (34/12) (too-many-branches)
fundamentals/renderer/list_of_dictionaries.py:536:4: R0915: Too many statements (85/50) (too-many-statements)
fundamentals/renderer/list_of_dictionaries.py:683:4: C0103: Argument name "tableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:683:4: C0103: Argument name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:703:11: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/renderer/list_of_dictionaries.py:706:8: C0103: Variable name "dataCopy" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/list_of_dictionaries.py:194:8: W0201: Attribute 'filepath' defined outside __init__ (attribute-defined-outside-init)
fundamentals/renderer/list_of_dictionaries.py:255:8: W0201: Attribute 'filepath' defined outside __init__ (attribute-defined-outside-init)
fundamentals/renderer/list_of_dictionaries.py:312:8: W0201: Attribute 'filepath' defined outside __init__ (attribute-defined-outside-init)
fundamentals/renderer/list_of_dictionaries.py:12:0: W0611: Unused import sys (unused-import)
fundamentals/renderer/list_of_dictionaries.py:15:0: W0611: Unused import re (unused-import)
fundamentals/renderer/list_of_dictionaries.py:23:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/renderer/list_of_dictionaries.py:20:0: C0411: standard import "from decimal import Decimal" should be placed before "import yaml" (wrong-import-order)
fundamentals/renderer/list_of_dictionaries.py:21:0: C0411: standard import "from datetime import datetime" should be placed before "import yaml" (wrong-import-order)
************* Module fundamentals.renderer.tests.test_list_of_dictionaries
fundamentals/renderer/tests/test_list_of_dictionaries.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/renderer/tests/test_list_of_dictionaries.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/renderer/tests/test_list_of_dictionaries.py:12:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:14:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:15:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:17:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:25:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:25:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:25:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:25:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:28:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:29:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:30:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:30:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:30:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:30:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:35:0: W0702: No exception type(s) specified (bare-except)
fundamentals/renderer/tests/test_list_of_dictionaries.py:44:0: C0103: Constant name "pathToPickleFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:46:0: C0103: Constant name "listOfDictionaries" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:48:0: C0103: Class name "test_list_of_dictionaries" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:48:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/renderer/tests/test_list_of_dictionaries.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/renderer/tests/test_list_of_dictionaries.py:52:8: C0415: Import outside toplevel (fundamentals.renderer) (import-outside-toplevel)
fundamentals/renderer/tests/test_list_of_dictionaries.py:53:8: C0103: Variable name "dataSet" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:50:4: R0201: Method could be a function (no-self-use)
fundamentals/renderer/tests/test_list_of_dictionaries.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/renderer/tests/test_list_of_dictionaries.py:74:8: C0103: Variable name "dataList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:93:8: C0415: Import outside toplevel (fundamentals.renderer) (import-outside-toplevel)
fundamentals/renderer/tests/test_list_of_dictionaries.py:94:8: C0103: Variable name "dataSet" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:72:4: R0201: Method could be a function (no-self-use)
fundamentals/renderer/tests/test_list_of_dictionaries.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/renderer/tests/test_list_of_dictionaries.py:114:8: C0415: Import outside toplevel (fundamentals.renderer) (import-outside-toplevel)
fundamentals/renderer/tests/test_list_of_dictionaries.py:123:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/renderer/tests/test_list_of_dictionaries.py:116:19: E1123: Unexpected keyword argument 'fakeKey' in constructor call (unexpected-keyword-arg)
fundamentals/renderer/tests/test_list_of_dictionaries.py:121:12: E1101: Instance of 'list_of_dictionaries' has no 'get' member (no-member)
fundamentals/renderer/tests/test_list_of_dictionaries.py:123:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/renderer/tests/test_list_of_dictionaries.py:123:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/renderer/tests/test_list_of_dictionaries.py:112:4: R0201: Method could be a function (no-self-use)
fundamentals/renderer/tests/test_list_of_dictionaries.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/renderer/tests/test_list_of_dictionaries.py:8:0: W0611: Unused import yaml (unused-import)
fundamentals/renderer/tests/test_list_of_dictionaries.py:11:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/renderer/tests/test_list_of_dictionaries.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.nose2_plugins.cprof
fundamentals/nose2_plugins/cprof.py:11:0: E0401: Unable to import 'pyprof2calltree' (import-error)
fundamentals/nose2_plugins/cprof.py:12:0: E0401: Unable to import 'nose2' (import-error)
fundamentals/nose2_plugins/cprof.py:17:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/nose2_plugins/cprof.py:32:4: C0103: Method name "startTestRun" doesn't conform to snake_case naming style (invalid-name)
fundamentals/nose2_plugins/cprof.py:37:4: C0103: Method name "beforeSummaryReport" doesn't conform to snake_case naming style (invalid-name)
fundamentals/nose2_plugins/cprof.py:11:0: W0611: Unused convert imported from pyprof2calltree (unused-import)
fundamentals/nose2_plugins/cprof.py:13:0: C0411: standard import "import os" should be placed before "from pyprof2calltree import convert, visualize" (wrong-import-order)
************* Module fundamentals.tests.test_utKit
fundamentals/tests/test_utKit.py:1:0: C0103: Module name "test_utKit" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_utKit.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/tests/test_utKit.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/tests/test_utKit.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_utKit.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/tests/test_utKit.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/tests/test_utKit.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/tests/test_utKit.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/tests/test_utKit.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/tests/test_utKit.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.tests.test_logs
fundamentals/tests/test_logs.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/tests/test_logs.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/tests/test_logs.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_logs.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/tests/test_logs.py:43:0: C0103: Class name "test_logs" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/tests/test_logs.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/tests/test_logs.py:48:8: W0621: Redefining name 'log' from outer scope (line 24) (redefined-outer-name)
fundamentals/tests/test_logs.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/tests/test_logs.py:46:8: C0415: Import outside toplevel (fundamentals.logs) (import-outside-toplevel)
fundamentals/tests/test_logs.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/tests/test_logs.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/tests/test_logs.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/tests/test_logs.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/tests/test_logs.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.tests.test_fmultiprocess
fundamentals/tests/test_fmultiprocess.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/tests/test_fmultiprocess.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/tests/test_fmultiprocess.py:13:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:15:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:16:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:18:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:26:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:26:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:26:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:26:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:29:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:30:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:31:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:31:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:31:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:31:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:36:0: W0702: No exception type(s) specified (bare-except)
fundamentals/tests/test_fmultiprocess.py:47:0: C0103: Function name "f" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:47:0: C0103: Argument name "n" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:47:0: C0103: Argument name "anotherKeyword" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:47:0: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/tests/test_fmultiprocess.py:49:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:47:9: W0613: Unused argument 'anotherKeyword' (unused-argument)
fundamentals/tests/test_fmultiprocess.py:53:0: C0103: Class name "test_multiprocess" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:53:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/tests/test_fmultiprocess.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/tests/test_fmultiprocess.py:57:8: C0415: Import outside toplevel (fundamentals) (import-outside-toplevel)
fundamentals/tests/test_fmultiprocess.py:60:8: C0103: Variable name "inputArray" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:61:8: C0103: Variable name "t1" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:68:8: C0103: Variable name "t2" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:65:8: W0641: Possibly unused variable 'took' (possibly-unused-variable)
fundamentals/tests/test_fmultiprocess.py:55:4: R0201: Method could be a function (no-self-use)
fundamentals/tests/test_fmultiprocess.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/tests/test_fmultiprocess.py:78:8: C0415: Import outside toplevel (fundamentals) (import-outside-toplevel)
fundamentals/tests/test_fmultiprocess.py:87:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/tests/test_fmultiprocess.py:80:19: E1120: No value for argument 'function' in function call (no-value-for-parameter)
fundamentals/tests/test_fmultiprocess.py:80:19: E1120: No value for argument 'inputArray' in function call (no-value-for-parameter)
fundamentals/tests/test_fmultiprocess.py:87:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/tests/test_fmultiprocess.py:76:4: R0201: Method could be a function (no-self-use)
fundamentals/tests/test_fmultiprocess.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/tests/test_fmultiprocess.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/tests/test_fmultiprocess.py:11:0: C0411: standard import "import time" should be placed before "import yaml" (wrong-import-order)
fundamentals/tests/test_fmultiprocess.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.tests.test_times
fundamentals/tests/test_times.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/tests/test_times.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/tests/test_times.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/tests/test_times.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/tests/test_times.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/tests/test_times.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/tests/test_times.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/tests/test_times.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/tests/test_times.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.download._fetch
fundamentals/download/_fetch.py:24:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/_fetch.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/_fetch.py:12:0: C0413: Import "from builtins import str" should be placed at the top of the module (wrong-import-position)
fundamentals/download/_fetch.py:13:0: C0413: Import "import sys" should be placed at the top of the module (wrong-import-position)
fundamentals/download/_fetch.py:14:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
fundamentals/download/_fetch.py:16:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/download/_fetch.py:37:4: W0621: Redefining name 'sys' from outer scope (line 13) (redefined-outer-name)
fundamentals/download/_fetch.py:33:4: C0415: Import outside toplevel (logging) (import-outside-toplevel)
fundamentals/download/_fetch.py:34:4: C0415: Import outside toplevel (socket) (import-outside-toplevel)
fundamentals/download/_fetch.py:35:4: E0401: Unable to import 'eventlet' (import-error)
fundamentals/download/_fetch.py:35:4: C0415: Import outside toplevel (eventlet) (import-outside-toplevel)
fundamentals/download/_fetch.py:36:4: C0415: Import outside toplevel (urllib) (import-outside-toplevel)
fundamentals/download/_fetch.py:37:4: W0404: Reimport 'sys' (imported line 13) (reimported)
fundamentals/download/_fetch.py:37:4: C0415: Import outside toplevel (sys) (import-outside-toplevel)
fundamentals/download/_fetch.py:43:28: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/download/_fetch.py:51:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/download/_fetch.py:45:12: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/download/_fetch.py:48:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/_fetch.py:51:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/_fetch.py:53:16: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/download/_fetch.py:56:16: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/download/_fetch.py:59:16: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/download/_fetch.py:37:4: W0641: Possibly unused variable 'sys' (possibly-unused-variable)
fundamentals/download/_fetch.py:35:4: W0641: Possibly unused variable 'Timeout' (possibly-unused-variable)
fundamentals/download/_fetch.py:13:0: W0611: Unused import sys (unused-import)
fundamentals/download/_fetch.py:16:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/download/_fetch.py:12:0: C0411: standard import "from builtins import str" should be placed before "from future import standard_library" (wrong-import-order)
fundamentals/download/_fetch.py:13:0: C0411: standard import "import sys" should be placed before "from future import standard_library" (wrong-import-order)
fundamentals/download/_fetch.py:14:0: C0411: standard import "import os" should be placed before "from future import standard_library" (wrong-import-order)
************* Module fundamentals.download.get_now_datetime_filestamp
fundamentals/download/get_now_datetime_filestamp.py:35:33: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/get_now_datetime_filestamp.py:12:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/download/get_now_datetime_filestamp.py:15:0: C0103: Argument name "longTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/get_now_datetime_filestamp.py:38:4: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
fundamentals/download/get_now_datetime_filestamp.py:38:4: W0611: Unused date imported from datetime (unused-import)
fundamentals/download/get_now_datetime_filestamp.py:38:4: W0611: Unused time imported from datetime (unused-import)
fundamentals/download/get_now_datetime_filestamp.py:9:0: W0611: Unused import sys (unused-import)
fundamentals/download/get_now_datetime_filestamp.py:12:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.download._dump_files_to_local_drive
fundamentals/download/_dump_files_to_local_drive.py:21:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/_dump_files_to_local_drive.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/_dump_files_to_local_drive.py:13:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/download/_dump_files_to_local_drive.py:15:0: C0103: Argument name "theseUrls" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/_dump_files_to_local_drive.py:41:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/download/_dump_files_to_local_drive.py:37:49: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/_dump_files_to_local_drive.py:41:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/_dump_files_to_local_drive.py:15:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
fundamentals/download/_dump_files_to_local_drive.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/download/_dump_files_to_local_drive.py:13:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.download.append_now_datestamp_to_filename
fundamentals/download/append_now_datestamp_to_filename.py:13:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/download/append_now_datestamp_to_filename.py:16:0: C0103: Argument name "longTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/append_now_datestamp_to_filename.py:44:4: C0415: Import outside toplevel (fundamentals.download) (import-outside-toplevel)
fundamentals/download/append_now_datestamp_to_filename.py:55:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/download/append_now_datestamp_to_filename.py:49:8: C0103: Variable name "dsFilename" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/append_now_datestamp_to_filename.py:52:12: C0103: Variable name "dsFilename" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/append_now_datestamp_to_filename.py:54:12: C0103: Variable name "dsFilename" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/append_now_datestamp_to_filename.py:55:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/append_now_datestamp_to_filename.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/download/append_now_datestamp_to_filename.py:13:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.download.extract_filename_from_url
fundamentals/download/extract_filename_from_url.py:24:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/extract_filename_from_url.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/extract_filename_from_url.py:49:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
fundamentals/download/extract_filename_from_url.py:51:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
fundamentals/download/extract_filename_from_url.py:46:2: W1401: Anomalous backslash in string: '\w'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/download/extract_filename_from_url.py:46:4: W1401: Anomalous backslash in string: '\.'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/download/extract_filename_from_url.py:46:6: W1401: Anomalous backslash in string: '\_'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/download/extract_filename_from_url.py:46:8: W1401: Anomalous backslash in string: '\-'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/download/extract_filename_from_url.py:51:0: W1401: Anomalous backslash in string: '\.'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
fundamentals/download/extract_filename_from_url.py:13:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/download/extract_filename_from_url.py:42:4: C0415: Import outside toplevel (re) (import-outside-toplevel)
fundamentals/download/extract_filename_from_url.py:53:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/download/extract_filename_from_url.py:46:8: C0103: Variable name "reEoURL" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/extract_filename_from_url.py:53:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/extract_filename_from_url.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/download/extract_filename_from_url.py:13:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.download.multiobject_download
fundamentals/download/multiobject_download.py:4:40: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/multiobject_download.py:6:0: C0301: Line too long (150/100) (line-too-long)
fundamentals/download/multiobject_download.py:23:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    urlList,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:24:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    downloadDirectory,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:25:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    log,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:26:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    timeStamp=True,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:27:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    timeout=180,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:28:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    concurrentDownloads=10,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:29:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    resetFilename=False,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:30:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    credentials=False,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:31:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    longTime=False,
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:32:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    indexFilenames=False
    ^   | (bad-continuation)
fundamentals/download/multiobject_download.py:39:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/multiobject_download.py:41:0: C0301: Line too long (150/100) (line-too-long)
fundamentals/download/multiobject_download.py:53:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/multiobject_download.py:62:0: C0301: Line too long (104/100) (line-too-long)
fundamentals/download/multiobject_download.py:78:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/download/multiobject_download.py:86:0: C0301: Line too long (133/100) (line-too-long)
fundamentals/download/multiobject_download.py:121:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
fundamentals/download/multiobject_download.py:151:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
fundamentals/download/multiobject_download.py:189:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
fundamentals/download/multiobject_download.py:14:0: C0413: Import "from builtins import zip" should be placed at the top of the module (wrong-import-position)
fundamentals/download/multiobject_download.py:15:0: C0413: Import "from builtins import str" should be placed at the top of the module (wrong-import-position)
fundamentals/download/multiobject_download.py:16:0: C0413: Import "import sys" should be placed at the top of the module (wrong-import-position)
fundamentals/download/multiobject_download.py:17:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
fundamentals/download/multiobject_download.py:19:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/download/multiobject_download.py:20:0: C0413: Import "import urllib" should be placed at the top of the module (wrong-import-position)
fundamentals/download/multiobject_download.py:80:4: W0621: Redefining name 'sys' from outer scope (line 16) (redefined-outer-name)
fundamentals/download/multiobject_download.py:81:4: W0621: Redefining name 'os' from outer scope (line 17) (redefined-outer-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "urlList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "downloadDirectory" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "timeStamp" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "concurrentDownloads" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "resetFilename" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "longTime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: C0103: Argument name "indexFilenames" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:22:0: R0913: Too many arguments (10/5) (too-many-arguments)
fundamentals/download/multiobject_download.py:22:0: R0914: Too many local variables (45/15) (too-many-locals)
fundamentals/download/multiobject_download.py:80:4: W0404: Reimport 'sys' (imported line 16) (reimported)
fundamentals/download/multiobject_download.py:80:4: C0415: Import outside toplevel (sys) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:81:4: W0404: Reimport 'os' (imported line 17) (reimported)
fundamentals/download/multiobject_download.py:81:4: C0415: Import outside toplevel (os) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:82:4: C0415: Import outside toplevel (eventlet) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:82:4: E0401: Unable to import 'eventlet' (import-error)
fundamentals/download/multiobject_download.py:83:4: C0415: Import outside toplevel (socket) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:84:4: C0415: Import outside toplevel (re) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:85:4: C0415: Import outside toplevel (base64) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:86:4: C0415: Import outside toplevel (fundamentals.download) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:97:4: C0103: Variable name "thisArray" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:99:4: C0103: Variable name "localUrls" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:100:4: C0103: Variable name "theseUrls" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:101:4: C0103: Variable name "requestList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:103:4: C0103: Variable name "totalCount" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:109:33: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/download/multiobject_download.py:117:16: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
fundamentals/download/multiobject_download.py:126:12: C0103: Variable name "localFilepath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:131:15: C0121: Comparison to False should be 'expr' (singleton-comparison)
fundamentals/download/multiobject_download.py:134:31: W1505: Using deprecated method encodestring() (deprecated-method)
fundamentals/download/multiobject_download.py:141:12: C0103: Variable name "u" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:141:15: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:156:12: C0103: Variable name "localFilepath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:163:15: C0121: Comparison to False should be 'expr' (singleton-comparison)
fundamentals/download/multiobject_download.py:167:31: W1505: Using deprecated method encodestring() (deprecated-method)
fundamentals/download/multiobject_download.py:204:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/download/multiobject_download.py:181:12: C0103: Variable name "urlNum" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:202:16: C0103: Variable name "theseUrls" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:204:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/download/multiobject_download.py:81:4: W0641: Possibly unused variable 'os' (possibly-unused-variable)
fundamentals/download/multiobject_download.py:84:4: W0641: Possibly unused variable 're' (possibly-unused-variable)
fundamentals/download/multiobject_download.py:185:12: W0641: Possibly unused variable 'percent' (possibly-unused-variable)
fundamentals/download/multiobject_download.py:117:16: W0641: Possibly unused variable 'date' (possibly-unused-variable)
fundamentals/download/multiobject_download.py:117:16: W0641: Possibly unused variable 'time' (possibly-unused-variable)
fundamentals/download/multiobject_download.py:22:0: R0912: Too many branches (21/12) (too-many-branches)
fundamentals/download/multiobject_download.py:22:0: R0915: Too many statements (84/50) (too-many-statements)
fundamentals/download/multiobject_download.py:16:0: W0611: Unused import sys (unused-import)
fundamentals/download/multiobject_download.py:19:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/download/multiobject_download.py:14:0: C0411: standard import "from builtins import zip" should be placed before "from future import standard_library" (wrong-import-order)
fundamentals/download/multiobject_download.py:15:0: C0411: standard import "from builtins import str" should be placed before "from future import standard_library" (wrong-import-order)
fundamentals/download/multiobject_download.py:16:0: C0411: standard import "import sys" should be placed before "from future import standard_library" (wrong-import-order)
fundamentals/download/multiobject_download.py:17:0: C0411: standard import "import os" should be placed before "from future import standard_library" (wrong-import-order)
fundamentals/download/multiobject_download.py:20:0: C0411: standard import "import urllib" should be placed before "from future import standard_library" (wrong-import-order)
************* Module fundamentals.download.tests.test_multiobject_download
fundamentals/download/tests/test_multiobject_download.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/download/tests/test_multiobject_download.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/download/tests/test_multiobject_download.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_multiobject_download.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/download/tests/test_multiobject_download.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/download/tests/test_multiobject_download.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/download/tests/test_multiobject_download.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/download/tests/test_multiobject_download.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/download/tests/test_multiobject_download.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.download.tests.test_extract_filename_from_url
fundamentals/download/tests/test_extract_filename_from_url.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/download/tests/test_extract_filename_from_url.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/download/tests/test_extract_filename_from_url.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_extract_filename_from_url.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/download/tests/test_extract_filename_from_url.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/download/tests/test_extract_filename_from_url.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/download/tests/test_extract_filename_from_url.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/download/tests/test_extract_filename_from_url.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/download/tests/test_extract_filename_from_url.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.download.tests.test__dump_files_to_local_drive
fundamentals/download/tests/test__dump_files_to_local_drive.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/download/tests/test__dump_files_to_local_drive.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/download/tests/test__dump_files_to_local_drive.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__dump_files_to_local_drive.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/download/tests/test__dump_files_to_local_drive.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/download/tests/test__dump_files_to_local_drive.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/download/tests/test__dump_files_to_local_drive.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/download/tests/test__dump_files_to_local_drive.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/download/tests/test__dump_files_to_local_drive.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.download.tests.test_get_now_datetime_filestamp
fundamentals/download/tests/test_get_now_datetime_filestamp.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/download/tests/test_get_now_datetime_filestamp.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.download.tests.test_append_now_datestamp_to_filename
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/download/tests/test_append_now_datestamp_to_filename.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.download.tests.test__fetch
fundamentals/download/tests/test__fetch.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/download/tests/test__fetch.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/download/tests/test__fetch.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/download/tests/test__fetch.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/download/tests/test__fetch.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/download/tests/test__fetch.py:4:0: W0611: Unused import unittest (unused-import)
fundamentals/download/tests/test__fetch.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/download/tests/test__fetch.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/download/tests/test__fetch.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.setup_database_connection
fundamentals/mysql/setup_database_connection.py:4:0: C0301: Line too long (102/100) (line-too-long)
fundamentals/mysql/setup_database_connection.py:22:64: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/setup_database_connection.py:24:0: C0301: Line too long (129/100) (line-too-long)
fundamentals/mysql/setup_database_connection.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/setup_database_connection.py:34:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/setup_database_connection.py:55:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/setup_database_connection.py:74:0: C0330: Wrong hanging indentation (remove 9 spaces).
                     'db'] + ' database on ' + connDict['host'])
            |        ^ (bad-continuation)
fundamentals/mysql/setup_database_connection.py:88:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/mysql/setup_database_connection.py:15:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/setup_database_connection.py:18:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/setup_database_connection.py:57:4: W0621: Redefining name 'sys' from outer scope (line 10) (redefined-outer-name)
fundamentals/mysql/setup_database_connection.py:20:0: C0103: Argument name "pathToYamlFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/setup_database_connection.py:57:4: W0404: Reimport 'sys' (imported line 10) (reimported)
fundamentals/mysql/setup_database_connection.py:57:4: C0415: Import outside toplevel (sys) (import-outside-toplevel)
fundamentals/mysql/setup_database_connection.py:58:4: C0415: Import outside toplevel (logging) (import-outside-toplevel)
fundamentals/mysql/setup_database_connection.py:59:4: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/mysql/setup_database_connection.py:67:4: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/setup_database_connection.py:63:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/mysql/setup_database_connection.py:66:8: C0103: Variable name "connDict" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/setup_database_connection.py:68:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/mysql/setup_database_connection.py:87:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/setup_database_connection.py:75:8: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/setup_database_connection.py:87:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/setup_database_connection.py:88:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/mysql/setup_database_connection.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/setup_database_connection.py:18:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.mysql.convert_dictionary_to_mysql_table
fundamentals/mysql/convert_dictionary_to_mysql_table.py:46:0: C0301: Line too long (103/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:48:0: C0301: Line too long (110/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:51:0: C0301: Line too long (102/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:52:0: C0301: Line too long (105/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:55:0: C0301: Line too long (233/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:66:0: C0301: Line too long (110/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:85:0: C0301: Line too long (117/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:106:0: C0301: Line too long (213/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:159:0: C0301: Line too long (127/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:171:0: C0301: Line too long (214/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:172:0: C0301: Line too long (155/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:177:0: C0301: Line too long (196/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:179:0: C0301: Line too long (187/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:281:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:304:0: C0301: Line too long (113/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:309:0: C0301: Line too long (124/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:351:0: C0301: Line too long (110/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:371:0: C0301: Line too long (135/100) (line-too-long)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:15:0: C0413: Import "import re" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:16:0: C0413: Import "import yaml" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:17:0: C0413: Import "import time" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:18:0: C0413: Import "import datetime" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:19:0: C0413: Import "import collections as c" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:20:0: C0413: Import "from fundamentals import tools, times" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:21:0: C0413: Import "from fundamentals.mysql import writequery, table_exists, readquery" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:22:0: C0413: Import "import six" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "dbTableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "uniqueKeyList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "createHelperTables" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "dateModified" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "returnInsertOnly" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "batchInserts" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "reDatetime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "skipChecks" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: C0103: Argument name "dateCreated" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: R0913: Too many arguments (13/5) (too-many-arguments)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: R0914: Too many local variables (46/15) (too-many-locals)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:136:8: C0103: Variable name "insertVerb" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:138:8: C0103: Variable name "insertVerb" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:140:7: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:163:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:171:24: R1701: Consider merging these isinstance calls to isinstance(v[0], (bool, datetime.date, float, int, six.string_types)) (consider-merging-isinstance)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:171:200: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:177:24: R1701: Consider merging these isinstance calls to isinstance(v, (bool, datetime.date, float, int, six.string_types)) (consider-merging-isinstance)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:177:160: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:192:12: C0103: Variable name "tableExists" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:192:26: E1101: Function 'table_exists' has no 'table_exists' member (no-member)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:198:12: C0103: Variable name "tableExists" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:202:12: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:218:4: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:219:4: C0103: Variable name "formattedKey" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:220:4: C0103: Variable name "formattedKeyList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:221:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:227:11: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:243:8: C0103: Variable name "formattedKey" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:246:12: C0103: Variable name "formattedKey" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:248:12: C0103: Variable name "formattedKey" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:266:16: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:278:15: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:280:16: C0103: Variable name "colExists" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:292:23: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:292:16: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:297:20: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:303:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:304:25: R1714: Consider merging these comparisons with "in" to "formattedKey in ('updated_parsed', 'published_parsed', 'feedName', 'title')" (consider-using-in)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:306:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:308:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:310:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:312:24: C0103: Variable name "columnLength" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:313:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:316:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:318:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:319:25: R1701: Consider merging these isinstance calls to isinstance(value[0], (float, int)) (consider-merging-isinstance)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:320:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:322:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:324:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:331:24: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:336:28: C0103: Variable name "qCreateColumn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:348:31: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:348:24: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:241:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:354:7: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:356:11: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:357:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:365:12: C0103: Variable name "indexName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:367:16: C0103: Variable name "indexName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:369:12: C0103: Variable name "indexName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:371:12: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:386:16: C0103: Variable name "addUniqueKey" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:396:7: C0121: Comparison to True should be just 'expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:396:36: C0121: Comparison to True should be just 'expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:397:8: C0103: Variable name "myKeys" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:398:8: C0103: Variable name "valueString" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:399:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:402:8: C0103: Variable name "mv" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:404:8: C0103: Variable name "valueTuple" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:409:19: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:412:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:414:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:415:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:416:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:417:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:418:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:419:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:422:12: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:428:4: C0103: Variable name "myKeys" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:429:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:432:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:433:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:435:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:437:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:438:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:439:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:440:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:441:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:442:4: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:446:8: C0103: Variable name "myValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:450:8: C0103: Variable name "dupValues" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:451:8: C0103: Variable name "dupKeys" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:453:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:458:19: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:464:19: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:474:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:479:8: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:482:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:483:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:484:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:485:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:486:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:487:4: C0103: Variable name "addValue" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:490:7: C0121: Comparison to True should be just 'expr' (singleton-comparison)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:503:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:178:20: W0641: Possibly unused variable 'this' (possibly-unused-variable)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:234:4: W0641: Possibly unused variable 'count' (possibly-unused-variable)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: R0912: Too many branches (77/12) (too-many-branches)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:25:0: R0915: Too many statements (221/50) (too-many-statements)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:12:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:17:0: W0611: Unused import time (unused-import)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:20:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:17:0: C0411: standard import "import time" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:18:0: C0411: standard import "import datetime" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:19:0: C0411: standard import "import collections as c" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/convert_dictionary_to_mysql_table.py:22:0: C0411: third party import "import six" should be placed before "import yaml" (wrong-import-order)
************* Module fundamentals.mysql.sqlite2mysql
fundamentals/mysql/sqlite2mysql.py:81:45: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/sqlite2mysql.py:82:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/sqlite2mysql.py:86:181: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/sqlite2mysql.py:86:0: C0301: Line too long (181/100) (line-too-long)
fundamentals/mysql/sqlite2mysql.py:104:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/sqlite2mysql.py:157:0: C0301: Line too long (106/100) (line-too-long)
fundamentals/mysql/sqlite2mysql.py:213:0: C0301: Line too long (109/100) (line-too-long)
fundamentals/mysql/sqlite2mysql.py:24:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/sqlite2mysql.py:25:0: C0413: Import "from fundamentals.mysql import writequery" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/sqlite2mysql.py:27:0: C0413: Import "from datetime import datetime, date, time" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/sqlite2mysql.py:59:4: W0621: Redefining name 'sqlite2mysql' from outer scope (line 71) (redefined-outer-name)
fundamentals/mysql/sqlite2mysql.py:35:4: C0103: Variable name "su" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:42:30: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:52:12: W0122: Use of exec (exec-used)
fundamentals/mysql/sqlite2mysql.py:54:12: W0122: Use of exec (exec-used)
fundamentals/mysql/sqlite2mysql.py:56:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:57:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/mysql/sqlite2mysql.py:59:4: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/sqlite2mysql.py:59:4: W0406: Module import itself (import-self)
fundamentals/mysql/sqlite2mysql.py:63:21: E0602: Undefined variable 'pathToSqliteDB' (undefined-variable)
fundamentals/mysql/sqlite2mysql.py:64:20: E0602: Undefined variable 'tablePrefix' (undefined-variable)
fundamentals/mysql/sqlite2mysql.py:29:0: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/sqlite2mysql.py:71:0: C0103: Class name "sqlite2mysql" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:119:8: C0103: Attribute name "pathToSqlite" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:120:8: C0103: Attribute name "tablePrefix" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:121:8: C0103: Attribute name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:71:0: R0205: Class 'sqlite2mysql' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/mysql/sqlite2mysql.py:108:4: R0913: Too many arguments (6/5) (too-many-arguments)
fundamentals/mysql/sqlite2mysql.py:126:11: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/mysql/sqlite2mysql.py:108:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/sqlite2mysql.py:132:4: R0914: Too many local variables (17/15) (too-many-locals)
fundamentals/mysql/sqlite2mysql.py:138:8: C0415: Import outside toplevel (fundamentals.renderer) (import-outside-toplevel)
fundamentals/mysql/sqlite2mysql.py:139:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/sqlite2mysql.py:150:8: C0103: Variable name "createStatements" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:161:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:162:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:168:20: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:175:20: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:176:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:178:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:180:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:182:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:184:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:185:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:187:16: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:190:16: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:193:16: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:199:16: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:204:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:206:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:208:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:210:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:212:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:214:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:216:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:218:12: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:222:16: C0103: Variable name "createStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:230:12: C0103: Variable name "allRows" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:231:12: C0103: Variable name "dateCreated" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:233:16: C0103: Variable name "thisDict" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:236:20: C0103: Variable name "dateCreated" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/sqlite2mysql.py:249:12: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/sqlite2mysql.py:132:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/sqlite2mysql.py:150:8: W0641: Possibly unused variable 'createStatements' (possibly-unused-variable)
fundamentals/mysql/sqlite2mysql.py:151:8: W0641: Possibly unused variable 'inserts' (possibly-unused-variable)
fundamentals/mysql/sqlite2mysql.py:138:8: W0641: Possibly unused variable 'list_of_dictionaries' (possibly-unused-variable)
fundamentals/mysql/sqlite2mysql.py:139:8: W0641: Possibly unused variable 'directory_script_runner' (possibly-unused-variable)
fundamentals/mysql/sqlite2mysql.py:132:4: R0912: Too many branches (13/12) (too-many-branches)
fundamentals/mysql/sqlite2mysql.py:132:4: R0915: Too many statements (66/50) (too-many-statements)
fundamentals/mysql/sqlite2mysql.py:71:0: R0903: Too few public methods (1/2) (too-few-public-methods)
fundamentals/mysql/sqlite2mysql.py:20:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/sqlite2mysql.py:27:0: W0611: Unused datetime imported from datetime (unused-import)
fundamentals/mysql/sqlite2mysql.py:27:0: W0611: Unused date imported from datetime (unused-import)
fundamentals/mysql/sqlite2mysql.py:27:0: W0611: Unused time imported from datetime (unused-import)
fundamentals/mysql/sqlite2mysql.py:27:0: C0411: standard import "from datetime import datetime, date, time" should be placed before "from fundamentals import tools" (wrong-import-order)
************* Module fundamentals.mysql.database
fundamentals/mysql/database.py:43:28: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:44:35: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:45:26: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:47:46: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:48:46: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:49:37: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:51:10: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:52:29: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/database.py:57:0: C0301: Line too long (101/100) (line-too-long)
fundamentals/mysql/database.py:198:0: C0301: Line too long (106/100) (line-too-long)
fundamentals/mysql/database.py:13:0: C0413: Import "import readline" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:14:0: C0413: Import "import glob" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:15:0: C0413: Import "import pickle" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:16:0: C0413: Import "import time" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:17:0: C0413: Import "from subprocess import Popen, PIPE, STDOUT" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:18:0: C0413: Import "from docopt import docopt" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:19:0: C0413: Import "from fundamentals.mysql import readquery" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/database.py:22:0: C0103: Class name "database" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/database.py:81:8: C0103: Attribute name "dbSettings" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:22:0: R0205: Class 'database' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/mysql/database.py:72:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/database.py:99:8: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/mysql/database.py:100:8: C0103: Variable name "dbSettings" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:112:8: C0103: Variable name "dbName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:113:8: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:132:4: C0103: Argument name "tunnelParameters" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:151:8: C0103: Variable name "sshPort" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:158:12: C0103: Variable name "ru" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:160:12: C0103: Variable name "rh" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:163:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:158:12: W0641: Possibly unused variable 'ru' (possibly-unused-variable)
fundamentals/mysql/database.py:159:12: W0641: Possibly unused variable 'rip' (possibly-unused-variable)
fundamentals/mysql/database.py:160:12: W0641: Possibly unused variable 'rh' (possibly-unused-variable)
fundamentals/mysql/database.py:164:12: W0641: Possibly unused variable 'output' (possibly-unused-variable)
fundamentals/mysql/database.py:181:4: C0103: Method name "_checkServer" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:187:8: C0415: Import outside toplevel (socket) (import-outside-toplevel)
fundamentals/mysql/database.py:188:8: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:196:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/database.py:196:8: W0641: Possibly unused variable 'e' (possibly-unused-variable)
fundamentals/mysql/database.py:22:0: R0903: Too few public methods (1/2) (too-few-public-methods)
fundamentals/mysql/database.py:13:0: W0611: Unused import readline (unused-import)
fundamentals/mysql/database.py:14:0: W0611: Unused import glob (unused-import)
fundamentals/mysql/database.py:15:0: W0611: Unused import pickle (unused-import)
fundamentals/mysql/database.py:17:0: W0611: Unused PIPE imported from subprocess (unused-import)
fundamentals/mysql/database.py:17:0: W0611: Unused STDOUT imported from subprocess (unused-import)
fundamentals/mysql/database.py:18:0: W0611: Unused docopt imported from docopt (unused-import)
fundamentals/mysql/database.py:19:0: W0611: Unused readquery imported from fundamentals.mysql (unused-import)
************* Module fundamentals.mysql.table_exists
fundamentals/mysql/table_exists.py:26:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/table_exists.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/table_exists.py:49:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/table_exists.py:12:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/table_exists.py:13:0: C0413: Import "from fundamentals.mysql import readquery" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/table_exists.py:15:0: C0103: Argument name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/table_exists.py:15:0: C0103: Argument name "dbTableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/table_exists.py:53:4: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/table_exists.py:58:4: C0103: Variable name "tableExists" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/table_exists.py:66:8: C0103: Variable name "tableExists" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/table_exists.py:68:8: C0103: Variable name "tableExists" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/table_exists.py:18:8: W0613: Unused argument 'dbTableName' (unused-argument)
fundamentals/mysql/table_exists.py:9:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/table_exists.py:12:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.mysql.__init__
fundamentals/mysql/__init__.py:11:0: C0301: Line too long (110/100) (line-too-long)
************* Module fundamentals.mysql.readquery
fundamentals/mysql/readquery.py:4:0: C0301: Line too long (119/100) (line-too-long)
fundamentals/mysql/readquery.py:20:0: C0301: Line too long (124/100) (line-too-long)
fundamentals/mysql/readquery.py:27:0: C0301: Line too long (158/100) (line-too-long)
fundamentals/mysql/readquery.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/readquery.py:33:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/readquery.py:46:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/readquery.py:68:0: C0301: Line too long (134/100) (line-too-long)
fundamentals/mysql/readquery.py:72:0: C0301: Line too long (134/100) (line-too-long)
fundamentals/mysql/readquery.py:13:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/readquery.py:15:0: C0103: Argument name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/readquery.py:15:0: C0103: Argument name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/readquery.py:49:4: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/mysql/readquery.py:50:4: C0415: Import outside toplevel (warnings) (import-outside-toplevel)
fundamentals/mysql/readquery.py:57:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/readquery.py:64:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/readquery.py:64:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/readquery.py:66:8: R1720: Unnecessary "else" after "raise" (no-else-raise)
fundamentals/mysql/readquery.py:66:11: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/readquery.py:73:12: W0107: Unnecessary pass statement (unnecessary-pass)
fundamentals/mysql/readquery.py:78:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/readquery.py:78:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/readquery.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/readquery.py:13:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.mysql.writequery
fundamentals/mysql/writequery.py:17:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    log,
    ^   | (bad-continuation)
fundamentals/mysql/writequery.py:18:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    sqlQuery,
    ^   | (bad-continuation)
fundamentals/mysql/writequery.py:19:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    dbConn,
    ^   | (bad-continuation)
fundamentals/mysql/writequery.py:20:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    Force=False,
    ^   | (bad-continuation)
fundamentals/mysql/writequery.py:21:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    manyValueList=False
    ^   | (bad-continuation)
fundamentals/mysql/writequery.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/writequery.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/writequery.py:68:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/writequery.py:101:0: C0301: Line too long (112/100) (line-too-long)
fundamentals/mysql/writequery.py:102:0: C0301: Line too long (110/100) (line-too-long)
fundamentals/mysql/writequery.py:161:0: C0301: Line too long (116/100) (line-too-long)
fundamentals/mysql/writequery.py:162:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/mysql/writequery.py:13:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/writequery.py:14:0: C0413: Import "import time" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/writequery.py:16:0: C0103: Argument name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:16:0: C0103: Argument name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:16:0: C0103: Argument name "Force" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:16:0: C0103: Argument name "manyValueList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:16:0: R0914: Too many local variables (18/15) (too-many-locals)
fundamentals/mysql/writequery.py:71:4: C0415: Import outside toplevel (pymysql) (import-outside-toplevel)
fundamentals/mysql/writequery.py:72:4: C0415: Import outside toplevel (warnings) (import-outside-toplevel)
fundamentals/mysql/writequery.py:77:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/writequery.py:77:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:171:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/writequery.py:82:11: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/writequery.py:93:16: C0103: Variable name "thisList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:95:16: C0103: Variable name "a" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:100:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:103:8: R1720: Unnecessary "else" after "raise" (no-else-raise)
fundamentals/mysql/writequery.py:103:11: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/writequery.py:108:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:112:8: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/writequery.py:111:12: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:153:16: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/writequery.py:134:23: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/writequery.py:145:28: C0103: Variable name "thisList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:147:28: C0103: Variable name "a" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:128:13: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
fundamentals/mysql/writequery.py:163:12: R1720: Unnecessary "else" after "raise" (no-else-raise)
fundamentals/mysql/writequery.py:163:15: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/writequery.py:169:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:171:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:183:15: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/writequery.py:189:4: C0103: Variable name "cOpen" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:195:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/writequery.py:194:12: C0103: Variable name "cOpen" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:195:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/writequery.py:201:16: W0101: Unreachable code (unreachable)
fundamentals/mysql/writequery.py:95:16: W0612: Unused variable 'a' (unused-variable)
fundamentals/mysql/writequery.py:16:0: R0912: Too many branches (35/12) (too-many-branches)
fundamentals/mysql/writequery.py:16:0: R0915: Too many statements (111/50) (too-many-statements)
fundamentals/mysql/writequery.py:13:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/mysql/writequery.py:14:0: C0411: standard import "import time" should be placed before "from fundamentals import tools" (wrong-import-order)
************* Module fundamentals.mysql.insert_list_of_dictionaries_into_database_tables
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:4:0: C0301: Line too long (111/100) (line-too-long)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:56:0: C0301: Line too long (135/100) (line-too-long)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:216:14: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:402:0: C0301: Line too long (108/100) (line-too-long)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:17:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:18:0: C0413: Import "from fundamentals.mysql import convert_dictionary_to_mysql_table, writequery" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:19:0: C0413: Import "from fundamentals.fmultiprocess import fmultiprocess" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:20:0: C0413: Import "import time" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:21:0: C0413: Import "import re" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:22:0: C0413: Import "from fundamentals.mysql.database import database" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:23:0: C0413: Import "from datetime import datetime" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:24:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:26:0: C0103: Constant name "count" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:27:0: C0103: Constant name "totalCount" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:28:0: C0103: Constant name "globalDbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:29:0: C0103: Constant name "sharedList" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "dictList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "dbTableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "uniqueKeyList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "dateModified" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "dateCreated" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "batchSize" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: C0103: Argument name "dbSettings" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: R0913: Too many arguments (10/5) (too-many-arguments)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:32:0: R0914: Too many local variables (18/15) (too-many-locals)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:84:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:84:4: C0103: Constant name "count" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:85:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:85:4: C0103: Constant name "totalCount" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:86:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:86:4: C0103: Constant name "globalDbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:87:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:87:4: C0103: Constant name "sharedList" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:89:4: C0103: Variable name "reDate" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:101:7: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:138:7: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:149:12: C0103: Variable name "thisBatch" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:153:8: C0103: Variable name "ltotalCount" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:157:11: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:153:8: W0641: Possibly unused variable 'ltotalCount' (possibly-unused-variable)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:241:4: W0621: Redefining name 'count' from outer scope (line 26) (redefined-outer-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "batchIndex" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "dbTableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "uniqueKeyList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "dateModified" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "batchSize" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "reDatetime" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: C0103: Argument name "dateCreated" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: R0913: Too many arguments (9/5) (too-many-arguments)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: R0914: Too many local variables (28/15) (too-many-locals)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:222:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:222:4: C0103: Constant name "totalCount" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:223:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:223:4: C0103: Constant name "globalDbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:224:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:224:4: C0103: Constant name "sharedList" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:228:4: C0103: Variable name "reDate" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:233:8: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:239:8: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:244:4: C0103: Variable name "ltotalCount" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:247:10: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:250:12: C0103: Variable name "insertVerb" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:252:12: C0103: Variable name "insertVerb" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:254:8: C0103: Variable name "uniKeys" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:258:8: C0103: Variable name "uniKeys" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:260:8: C0103: Variable name "myKeys" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:263:8: C0103: Variable name "valueString" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:264:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:269:12: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:279:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:281:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:282:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:283:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:296:8: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:297:12: C0103: Variable name "theseInserts" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:298:16: C0103: Variable name "aDict" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:299:16: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:299:31: C0103: Variable name "valueTuple" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:325:16: C0103: Variable name "aDict" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:191:8: W0613: Unused argument 'batchSize' (unused-argument)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:244:4: W0641: Possibly unused variable 'ltotalCount' (possibly-unused-variable)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: R0912: Too many branches (14/12) (too-many-branches)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:184:0: R0915: Too many statements (54/50) (too-many-statements)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:387:4: W0621: Redefining name 'count' from outer scope (line 26) (redefined-outer-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:345:0: C0103: Argument name "masterListIndex" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:345:0: C0103: Argument name "dbTablename" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:345:0: C0103: Argument name "dbSettings" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:345:0: C0103: Argument name "dateModified" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:345:0: R0914: Too many local variables (19/15) (too-many-locals)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:378:4: C0415: Import outside toplevel (fundamentals.logs) (import-outside-toplevel)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:379:4: C0415: Import outside toplevel (pandas) (import-outside-toplevel)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:383:4: W0603: Using the global statement (global-statement)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:383:4: C0103: Constant name "sharedList" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:385:4: C0103: Variable name "dictList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:390:4: C0103: Variable name "ltotalCount" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:393:4: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:399:4: C0103: Variable name "tmpTable" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:402:4: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:409:4: C0103: Variable name "csvColumns" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:410:4: C0103: Variable name "csvColumns" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:411:4: C0103: Variable name "csvColumnsString" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:412:4: C0103: Variable name "csvColumnsString" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:414:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:419:4: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:431:4: C0103: Variable name "updateStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:433:8: C0103: Variable name "updateStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:435:8: C0103: Variable name "updateStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:437:8: C0103: Variable name "updateStatement" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:439:4: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:449:4: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:458:4: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:345:0: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:347:8: W0613: Unused argument 'dbTablename' (unused-argument)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:390:4: W0641: Possibly unused variable 'ltotalCount' (possibly-unused-variable)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:399:4: W0641: Possibly unused variable 'tmpTable' (possibly-unused-variable)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:432:8: W0641: Possibly unused variable 'i' (possibly-unused-variable)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:11:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:17:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:20:0: W0611: Unused import time (unused-import)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:14:0: C0411: standard import "import sys" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:15:0: C0411: standard import "import os" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:20:0: C0411: standard import "import time" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:21:0: C0411: standard import "import re" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:23:0: C0411: standard import "from datetime import datetime" should be placed before "from past.utils import old_div" (wrong-import-order)
fundamentals/mysql/insert_list_of_dictionaries_into_database_tables.py:24:0: C0411: third party import "import numpy as np" should be placed before "from fundamentals import tools" (wrong-import-order)
************* Module fundamentals.mysql.yaml_to_database
fundamentals/mysql/yaml_to_database.py:100:0: C0301: Line too long (101/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:106:0: C0301: Line too long (136/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:108:0: C0301: Line too long (116/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:109:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:113:181: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:113:0: C0301: Line too long (181/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:125:5: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:132:0: C0301: Line too long (163/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:135:32: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:137:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:167:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:172:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:182:9: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:183:24: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:199:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        self,
        ^   | (bad-continuation)
fundamentals/mysql/yaml_to_database.py:200:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        filepath,
        ^   | (bad-continuation)
fundamentals/mysql/yaml_to_database.py:201:0: C0330: Wrong hanging indentation before block (add 4 spaces).
        deleteFile=False
        ^   | (bad-continuation)
fundamentals/mysql/yaml_to_database.py:208:0: C0301: Line too long (113/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:209:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:214:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:227:9: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:233:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/yaml_to_database.py:268:0: C0301: Line too long (140/100) (line-too-long)
fundamentals/mysql/yaml_to_database.py:36:0: E0401: Unable to import 'requests.packages.urllib3' (import-error)
fundamentals/mysql/yaml_to_database.py:37:0: E1101: Module 'requests.packages' has no 'urllib3' member (no-member)
fundamentals/mysql/yaml_to_database.py:70:8: W0621: Redefining name 'yaml_to_database' from outer scope (line 98) (redefined-outer-name)
fundamentals/mysql/yaml_to_database.py:45:4: C0103: Variable name "su" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:52:30: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:62:12: W0122: Use of exec (exec-used)
fundamentals/mysql/yaml_to_database.py:64:12: W0122: Use of exec (exec-used)
fundamentals/mysql/yaml_to_database.py:66:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:67:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/mysql/yaml_to_database.py:69:22: E0602: Undefined variable 'pathToYaml' (undefined-variable)
fundamentals/mysql/yaml_to_database.py:70:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/yaml_to_database.py:70:8: W0406: Module import itself (import-self)
fundamentals/mysql/yaml_to_database.py:78:21: E0602: Undefined variable 'pathToYaml' (undefined-variable)
fundamentals/mysql/yaml_to_database.py:79:23: E0602: Undefined variable 'deleteFlag' (undefined-variable)
fundamentals/mysql/yaml_to_database.py:81:36: E0602: Undefined variable 'pathToYaml' (undefined-variable)
fundamentals/mysql/yaml_to_database.py:85:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/yaml_to_database.py:85:8: W0406: Module import itself (import-self)
fundamentals/mysql/yaml_to_database.py:90:27: E0602: Undefined variable 'pathToYaml' (undefined-variable)
fundamentals/mysql/yaml_to_database.py:91:24: E0602: Undefined variable 'deleteFlag' (undefined-variable)
fundamentals/mysql/yaml_to_database.py:39:0: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/yaml_to_database.py:81:8: W0641: Possibly unused variable 'basename' (possibly-unused-variable)
fundamentals/mysql/yaml_to_database.py:98:0: C0103: Class name "yaml_to_database" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:153:8: C0103: Attribute name "pathToInputDir" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:154:8: C0103: Attribute name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:155:8: C0103: Attribute name "deleteFiles" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:98:0: R0205: Class 'yaml_to_database' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/mysql/yaml_to_database.py:141:4: R0913: Too many arguments (6/5) (too-many-arguments)
fundamentals/mysql/yaml_to_database.py:141:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/yaml_to_database.py:188:12: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:160:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/yaml_to_database.py:198:4: C0103: Argument name "deleteFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:198:4: R0914: Too many local variables (17/15) (too-many-locals)
fundamentals/mysql/yaml_to_database.py:238:8: C0415: Import outside toplevel (codecs) (import-outside-toplevel)
fundamentals/mysql/yaml_to_database.py:241:12: C0103: Variable name "readFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:242:12: C0103: Variable name "thisData" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:244:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:250:8: C0103: Variable name "matchObject" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:256:8: C0103: Variable name "yamlContent" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:259:16: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:261:16: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:263:16: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:272:8: C0103: Variable name "dbTablesTmp" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:274:8: C0103: Variable name "dbTables" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:281:8: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/yaml_to_database.py:279:12: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:287:12: C0103: Variable name "uniqueKeyList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:289:12: C0103: Variable name "uniqueKeyList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:291:12: C0103: Variable name "t" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/yaml_to_database.py:244:8: W0641: Possibly unused variable 'e' (possibly-unused-variable)
fundamentals/mysql/yaml_to_database.py:27:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/yaml_to_database.py:29:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/yaml_to_database.py:32:0: W0611: Unused import glob (unused-import)
fundamentals/mysql/yaml_to_database.py:33:0: W0611: Unused import docopt (unused-import)
fundamentals/mysql/yaml_to_database.py:34:0: W0611: Unused times imported from fundamentals (unused-import)
fundamentals/mysql/yaml_to_database.py:30:0: C0411: third party import "import requests" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/yaml_to_database.py:31:0: C0411: standard import "import re" should be placed before "import requests" (wrong-import-order)
fundamentals/mysql/yaml_to_database.py:32:0: C0411: standard import "import glob" should be placed before "import requests" (wrong-import-order)
fundamentals/mysql/yaml_to_database.py:33:0: C0411: third party import "import docopt" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/yaml_to_database.py:36:0: C0411: third party import "import requests.packages.urllib3" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/yaml_to_database.py:36:0: C0412: Imports from package requests are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.directory_script_runner
fundamentals/mysql/directory_script_runner.py:4:0: C0301: Line too long (124/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:8:0: C0301: Line too long (106/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:10:79: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:16:0: C0301: Line too long (118/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:17:0: C0301: Line too long (110/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:18:80: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:19:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:22:0: C0301: Line too long (121/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:23:118: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:23:0: C0301: Line too long (118/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:35:0: C0301: Line too long (128/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:61:0: C0301: Line too long (203/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:63:124: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:63:0: C0301: Line too long (124/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:66:0: C0301: Line too long (106/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:70:0: C0301: Line too long (259/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:76:50: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:79:0: C0301: Line too long (267/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:82:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:87:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:117:0: C0301: Line too long (107/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:119:0: C0301: Line too long (154/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:132:0: C0301: Line too long (112/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:133:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/directory_script_runner.py:159:0: C0301: Line too long (105/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:159:16: C0326: Exactly one space required after assignment
            cmd =  """mysql --login-path=%(loginPath)s %(force)s %(databaseName)s < "%(v)s" """ % locals(
                ^ (bad-whitespace)
fundamentals/mysql/directory_script_runner.py:162:0: C0301: Line too long (187/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:184:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:202:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:205:0: C0301: Line too long (141/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:205:20: C0326: Exactly one space required after assignment
                cmd =  """mysql --login-path=%(loginPath)s %(force)s  %(databaseName)s < "%(v)s" > /dev/null 2>&1 & rm "%(v)s" """ % locals()
                    ^ (bad-whitespace)
fundamentals/mysql/directory_script_runner.py:207:0: C0301: Line too long (128/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:207:20: C0326: Exactly one space required after assignment
                cmd =  """mysql --login-path=%(loginPath)s %(force)s  %(databaseName)s < "%(v)s" > /dev/null 2>&1 """ % locals()
                    ^ (bad-whitespace)
fundamentals/mysql/directory_script_runner.py:209:0: C0301: Line too long (196/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:216:0: C0301: Line too long (135/100) (line-too-long)
fundamentals/mysql/directory_script_runner.py:50:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/directory_script_runner.py:52:0: C0103: Argument name "pathToScriptDirectory" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: C0103: Argument name "databaseName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: C0103: Argument name "loginPath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: C0103: Argument name "waitForResult" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: C0103: Argument name "successRule" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: C0103: Argument name "failureRule" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: R0913: Too many arguments (8/5) (too-many-arguments)
fundamentals/mysql/directory_script_runner.py:52:0: R0914: Too many local variables (23/15) (too-many-locals)
fundamentals/mysql/directory_script_runner.py:138:4: C0103: Variable name "scriptList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:139:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:140:8: C0103: Variable name "filePath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:155:4: C0103: Variable name "scriptList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:156:11: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:158:11: C0121: Comparison to True should be just 'expr' (singleton-comparison)
fundamentals/mysql/directory_script_runner.py:161:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:165:15: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/mysql/directory_script_runner.py:168:19: R1714: Consider merging these comparisons with "in" to 'failureRule in (None, False)' (consider-using-in)
fundamentals/mysql/directory_script_runner.py:168:19: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/mysql/directory_script_runner.py:168:42: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/directory_script_runner.py:173:20: C0103: Variable name "moveTo" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:177:20: C0103: Variable name "moveTo" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:182:27: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/directory_script_runner.py:182:20: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:186:19: R1714: Consider merging these comparisons with "in" to 'successRule in (None, False)' (consider-using-in)
fundamentals/mysql/directory_script_runner.py:186:19: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
fundamentals/mysql/directory_script_runner.py:186:42: C0121: Comparison to False should be 'not expr' (singleton-comparison)
fundamentals/mysql/directory_script_runner.py:191:20: C0103: Variable name "moveTo" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:195:20: C0103: Variable name "moveTo" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:200:27: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/directory_script_runner.py:200:20: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:208:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:52:0: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/directory_script_runner.py:55:8: W0613: Unused argument 'databaseName' (unused-argument)
fundamentals/mysql/directory_script_runner.py:56:8: W0613: Unused argument 'loginPath' (unused-argument)
fundamentals/mysql/directory_script_runner.py:156:8: W0641: Possibly unused variable 'k' (possibly-unused-variable)
fundamentals/mysql/directory_script_runner.py:163:12: W0641: Possibly unused variable 'stdout' (possibly-unused-variable)
fundamentals/mysql/directory_script_runner.py:52:0: R0912: Too many branches (20/12) (too-many-branches)
fundamentals/mysql/directory_script_runner.py:52:0: R0915: Too many statements (56/50) (too-many-statements)
fundamentals/mysql/directory_script_runner.py:220:4: C0103: Variable name "su" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:227:30: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:237:12: W0122: Use of exec (exec-used)
fundamentals/mysql/directory_script_runner.py:239:12: W0122: Use of exec (exec-used)
fundamentals/mysql/directory_script_runner.py:241:12: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:242:8: W1201: Specify string format arguments as logging function parameters (logging-not-lazy)
fundamentals/mysql/directory_script_runner.py:245:8: C0103: Variable name "successFlag" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:247:8: C0103: Variable name "failureFlag" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/directory_script_runner.py:251:30: E0602: Undefined variable 'pathToDirectory' (undefined-variable)
fundamentals/mysql/directory_script_runner.py:252:21: E0602: Undefined variable 'databaseName' (undefined-variable)
fundamentals/mysql/directory_script_runner.py:253:18: E0602: Undefined variable 'loginPath' (undefined-variable)
fundamentals/mysql/directory_script_runner.py:214:0: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/directory_script_runner.py:227:15: W0612: Unused variable 'settings' (unused-variable)
fundamentals/mysql/directory_script_runner.py:227:30: W0612: Unused variable 'dbConn' (unused-variable)
fundamentals/mysql/directory_script_runner.py:43:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/directory_script_runner.py:48:0: W0611: Unused STDOUT imported from subprocess (unused-import)
************* Module fundamentals.mysql.get_database_table_column_names
fundamentals/mysql/get_database_table_column_names.py:17:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    dbConn,
    ^   | (bad-continuation)
fundamentals/mysql/get_database_table_column_names.py:18:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    log,
    ^   | (bad-continuation)
fundamentals/mysql/get_database_table_column_names.py:19:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    dbTable
    ^   | (bad-continuation)
fundamentals/mysql/get_database_table_column_names.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/get_database_table_column_names.py:33:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/get_database_table_column_names.py:47:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/mysql/get_database_table_column_names.py:13:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/get_database_table_column_names.py:14:0: C0413: Import "from fundamentals.mysql import readquery" should be placed at the top of the module (wrong-import-position)
fundamentals/mysql/get_database_table_column_names.py:16:0: C0103: Argument name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/get_database_table_column_names.py:16:0: C0103: Argument name "dbTable" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/get_database_table_column_names.py:51:4: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/get_database_table_column_names.py:60:11: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/get_database_table_column_names.py:60:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/get_database_table_column_names.py:65:4: C0103: Variable name "columnNames" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/get_database_table_column_names.py:10:0: W0611: Unused import sys (unused-import)
fundamentals/mysql/get_database_table_column_names.py:13:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.mysql.tests.test_yaml_to_database
fundamentals/mysql/tests/test_yaml_to_database.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_yaml_to_database.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_yaml_to_database.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_yaml_to_database.py:45:0: C0103: Class name "test_yaml_to_database" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:45:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_yaml_to_database.py:49:8: W0621: Redefining name 'shutil' from outer scope (line 5) (redefined-outer-name)
fundamentals/mysql/tests/test_yaml_to_database.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_yaml_to_database.py:49:8: W0404: Reimport 'shutil' (imported line 5) (reimported)
fundamentals/mysql/tests/test_yaml_to_database.py:49:8: C0415: Import outside toplevel (shutil) (import-outside-toplevel)
fundamentals/mysql/tests/test_yaml_to_database.py:52:8: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_yaml_to_database.py:57:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_yaml_to_database.py:47:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_yaml_to_database.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_yaml_to_database.py:70:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_yaml_to_database.py:68:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_yaml_to_database.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_yaml_to_database.py:81:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_yaml_to_database.py:91:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/tests/test_yaml_to_database.py:83:19: E1123: Unexpected keyword argument 'fakeKey' in constructor call (unexpected-keyword-arg)
fundamentals/mysql/tests/test_yaml_to_database.py:89:12: E1101: Instance of 'yaml_to_database' has no 'get' member (no-member)
fundamentals/mysql/tests/test_yaml_to_database.py:91:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_yaml_to_database.py:91:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/mysql/tests/test_yaml_to_database.py:79:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_yaml_to_database.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_yaml_to_database.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_yaml_to_database.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_yaml_to_database.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_database
fundamentals/mysql/tests/test_database.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_database.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_database.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_database.py:43:0: C0103: Constant name "dbSettings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:44:0: C0103: Constant name "dbSettings2" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:46:0: C0103: Class name "test_database" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:46:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_database.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_database.py:50:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_database.py:51:8: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:55:8: C0103: Variable name "sshPort" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:55:18: W0212: Access to a protected member _setup_tunnel of a client class (protected-access)
fundamentals/mysql/tests/test_database.py:48:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/tests/test_database.py:55:8: W0612: Unused variable 'sshPort' (unused-variable)
fundamentals/mysql/tests/test_database.py:48:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_database.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_database.py:63:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_database.py:64:8: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:61:4: R1711: Useless return at end of function or method (useless-return)
fundamentals/mysql/tests/test_database.py:64:8: W0612: Unused variable 'db' (unused-variable)
fundamentals/mysql/tests/test_database.py:61:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_database.py:75:8: W0621: Redefining name 'dbConn' from outer scope (line 24) (redefined-outer-name)
fundamentals/mysql/tests/test_database.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_database.py:74:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_database.py:75:8: C0103: Variable name "dbConn" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:80:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_database.py:81:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:84:8: W0612: Unused variable 'rows' (unused-variable)
fundamentals/mysql/tests/test_database.py:71:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_database.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_database.py:94:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_database.py:103:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/tests/test_database.py:96:19: E1123: Unexpected keyword argument 'fakeKey' in constructor call (unexpected-keyword-arg)
fundamentals/mysql/tests/test_database.py:101:12: E1101: Instance of 'database' has no 'get' member (no-member)
fundamentals/mysql/tests/test_database.py:103:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_database.py:103:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/mysql/tests/test_database.py:92:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_database.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_database.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_database.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_database.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_readquery
fundamentals/mysql/tests/test_readquery.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_readquery.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_readquery.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_readquery.py:43:0: C0103: Class name "test_readquery" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_readquery.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_readquery.py:47:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_readquery.py:48:8: W0612: Unused variable 'rows' (unused-variable)
fundamentals/mysql/tests/test_readquery.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_readquery.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_readquery.py:57:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_readquery.py:66:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/tests/test_readquery.py:66:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:59:12: W0612: Unused variable 'rows' (unused-variable)
fundamentals/mysql/tests/test_readquery.py:66:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/mysql/tests/test_readquery.py:55:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_readquery.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_readquery.py:72:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_readquery.py:81:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/tests/test_readquery.py:81:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_readquery.py:74:12: W0612: Unused variable 'rows' (unused-variable)
fundamentals/mysql/tests/test_readquery.py:81:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/mysql/tests/test_readquery.py:70:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_readquery.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_readquery.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_readquery.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_readquery.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_writequery
fundamentals/mysql/tests/test_writequery.py:48:0: C0301: Line too long (104/100) (line-too-long)
fundamentals/mysql/tests/test_writequery.py:59:0: C0301: Line too long (105/100) (line-too-long)
fundamentals/mysql/tests/test_writequery.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_writequery.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_writequery.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_writequery.py:43:0: C0103: Class name "test_writequery" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_writequery.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_writequery.py:47:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_writequery.py:48:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_writequery.py:57:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_writequery.py:58:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_writequery.py:59:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:68:8: W0404: Reimport 'writequery' (imported line 58) (reimported)
fundamentals/mysql/tests/test_writequery.py:68:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_writequery.py:69:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:57:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_writequery.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_writequery.py:81:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_writequery.py:82:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:79:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_writequery.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_writequery.py:93:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_writequery.py:94:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_writequery.py:91:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_writequery.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_writequery.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_writequery.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_writequery.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:50:0: C0301: Line too long (401/100) (line-too-long)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:75:0: C0301: Line too long (103/100) (line-too-long)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:101:0: C0301: Line too long (103/100) (line-too-long)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:12:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:14:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:15:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:17:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:25:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:25:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:25:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:25:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:28:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:29:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:30:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:30:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:30:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:30:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:35:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:44:0: C0103: Constant name "reDatetime" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:46:0: C0103: Class name "test_convert_dictionary_to_mysql_table" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:46:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:49:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:50:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:61:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:62:8: W0612: Unused variable 'message' (unused-variable)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:48:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:74:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:75:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:86:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:87:8: W0612: Unused variable 'message' (unused-variable)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:73:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:100:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:101:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:112:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:113:8: W0612: Unused variable 'message' (unused-variable)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:99:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:126:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:129:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:130:8: W0612: Unused variable 'inserts' (unused-variable)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:126:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:8:0: C0411: standard import "import re" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:11:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_convert_dictionary_to_mysql_table.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_setup_database_connection
fundamentals/mysql/tests/test_setup_database_connection.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_setup_database_connection.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_setup_database_connection.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_setup_database_connection.py:43:0: C0103: Class name "test_setup_database_connection" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_setup_database_connection.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_setup_database_connection.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_setup_database_connection.py:47:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_setup_database_connection.py:48:8: W0612: Unused variable 'this' (unused-variable)
fundamentals/mysql/tests/test_setup_database_connection.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_setup_database_connection.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_setup_database_connection.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_setup_database_connection.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_setup_database_connection.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_sqlite2mysql
fundamentals/mysql/tests/test_sqlite2mysql.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_sqlite2mysql.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_sqlite2mysql.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_sqlite2mysql.py:45:0: C0103: Constant name "pathToSqlite" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:47:0: C0103: Class name "test_sqlite2mysql" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:47:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_sqlite2mysql.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_sqlite2mysql.py:51:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_sqlite2mysql.py:49:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_sqlite2mysql.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_sqlite2mysql.py:63:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_sqlite2mysql.py:73:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/tests/test_sqlite2mysql.py:65:19: E1123: Unexpected keyword argument 'fakeKey' in constructor call (unexpected-keyword-arg)
fundamentals/mysql/tests/test_sqlite2mysql.py:71:12: E1101: Instance of 'sqlite2mysql' has no 'get' member (no-member)
fundamentals/mysql/tests/test_sqlite2mysql.py:73:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_sqlite2mysql.py:73:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/mysql/tests/test_sqlite2mysql.py:61:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_sqlite2mysql.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_sqlite2mysql.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_sqlite2mysql.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_sqlite2mysql.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:12:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:14:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:15:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:17:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:25:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:25:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:25:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:25:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:28:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:29:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:30:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:30:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:30:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:30:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:35:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:44:0: C0103: Constant name "dictList" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:55:0: C0103: Constant name "dbSettings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:55:13: C0103: Constant name "dbSettings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:63:0: C0103: Class name "test_insert_list_of_dictionaries_into_database_tables" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:63:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:67:8: C0103: Variable name "t1" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:69:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:67:8: W0612: Unused variable 't1' (unused-variable)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:65:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:8:0: C0411: standard import "import time" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:11:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_insert_list_of_dictionaries_into_database_tables.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_directory_script_runner
fundamentals/mysql/tests/test_directory_script_runner.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_directory_script_runner.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_directory_script_runner.py:46:0: C0103: Class name "test_directory_script_runner" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:46:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:50:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_directory_script_runner.py:48:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_directory_script_runner.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:60:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_directory_script_runner.py:58:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_directory_script_runner.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:72:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_directory_script_runner.py:70:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_directory_script_runner.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:84:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_directory_script_runner.py:82:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_directory_script_runner.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:96:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_directory_script_runner.py:94:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_directory_script_runner.py:107:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_directory_script_runner.py:109:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_directory_script_runner.py:117:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/mysql/tests/test_directory_script_runner.py:111:12: E1123: Unexpected keyword argument 'settings' in function call (unexpected-keyword-arg)
fundamentals/mysql/tests/test_directory_script_runner.py:111:12: E1123: Unexpected keyword argument 'fakeKey' in function call (unexpected-keyword-arg)
fundamentals/mysql/tests/test_directory_script_runner.py:111:12: E1120: No value for argument 'pathToScriptDirectory' in function call (no-value-for-parameter)
fundamentals/mysql/tests/test_directory_script_runner.py:111:12: E1120: No value for argument 'databaseName' in function call (no-value-for-parameter)
fundamentals/mysql/tests/test_directory_script_runner.py:111:12: E1120: No value for argument 'loginPath' in function call (no-value-for-parameter)
fundamentals/mysql/tests/test_directory_script_runner.py:117:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_directory_script_runner.py:117:8: W0612: Unused variable 'e' (unused-variable)
fundamentals/mysql/tests/test_directory_script_runner.py:107:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_directory_script_runner.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_directory_script_runner.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_directory_script_runner.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_directory_script_runner.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_table_exists
fundamentals/mysql/tests/test_table_exists.py:48:0: C0301: Line too long (103/100) (line-too-long)
fundamentals/mysql/tests/test_table_exists.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_table_exists.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_table_exists.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_table_exists.py:43:0: C0103: Class name "test_table_exists" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_table_exists.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_table_exists.py:47:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_table_exists.py:48:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:57:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_table_exists.py:58:8: C0103: Variable name "tableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:66:8: W0404: Reimport 'writequery' (imported line 47) (reimported)
fundamentals/mysql/tests/test_table_exists.py:66:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_table_exists.py:67:8: C0103: Variable name "sqlQuery" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:59:8: W0612: Unused variable 'this' (unused-variable)
fundamentals/mysql/tests/test_table_exists.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_table_exists.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_table_exists.py:78:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_table_exists.py:79:8: C0103: Variable name "tableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_table_exists.py:80:8: W0612: Unused variable 'this' (unused-variable)
fundamentals/mysql/tests/test_table_exists.py:76:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_table_exists.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_table_exists.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_table_exists.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_table_exists.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.mysql.tests.test_get_database_table_column_names
fundamentals/mysql/tests/test_get_database_table_column_names.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/mysql/tests/test_get_database_table_column_names.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/mysql/tests/test_get_database_table_column_names.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/mysql/tests/test_get_database_table_column_names.py:43:0: C0103: Class name "test_get_database_table_column_names" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/mysql/tests/test_get_database_table_column_names.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/mysql/tests/test_get_database_table_column_names.py:47:8: C0415: Import outside toplevel (fundamentals.mysql) (import-outside-toplevel)
fundamentals/mysql/tests/test_get_database_table_column_names.py:48:8: C0103: Variable name "columnNames" doesn't conform to snake_case naming style (invalid-name)
fundamentals/mysql/tests/test_get_database_table_column_names.py:48:8: W0612: Unused variable 'columnNames' (unused-variable)
fundamentals/mysql/tests/test_get_database_table_column_names.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/mysql/tests/test_get_database_table_column_names.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/mysql/tests/test_get_database_table_column_names.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/mysql/tests/test_get_database_table_column_names.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/mysql/tests/test_get_database_table_column_names.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.files.fileChunker
fundamentals/files/fileChunker.py:25:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/fileChunker.py:29:181: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/fileChunker.py:29:0: C0301: Line too long (181/100) (line-too-long)
fundamentals/files/fileChunker.py:31:0: C0301: Line too long (111/100) (line-too-long)
fundamentals/files/fileChunker.py:42:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/fileChunker.py:1:0: C0103: Module name "fileChunker" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/fileChunker.py:14:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/files/fileChunker.py:15:0: C0413: Import "import codecs" should be placed at the top of the module (wrong-import-position)
fundamentals/files/fileChunker.py:17:0: C0103: Class name "fileChunker" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/files/fileChunker.py:47:8: C0103: Attribute name "batchSize" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/fileChunker.py:50:12: C0103: Attribute name "readFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/fileChunker.py:17:0: R0205: Class 'fileChunker' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
fundamentals/files/fileChunker.py:52:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/fileChunker.py:56:24: C0321: More than one statement on a single line (multiple-statements)
fundamentals/files/fileChunker.py:61:12: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/fileChunker.py:62:15: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/files/fileChunker.py:60:12: W0612: Unused variable 'lines' (unused-variable)
fundamentals/files/fileChunker.py:11:0: W0611: Unused import sys (unused-import)
fundamentals/files/fileChunker.py:14:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/files/fileChunker.py:15:0: C0411: standard import "import codecs" should be placed before "from fundamentals import tools" (wrong-import-order)
************* Module fundamentals.files.recursive_directory_listing
fundamentals/files/recursive_directory_listing.py:15:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    log,
    ^   | (bad-continuation)
fundamentals/files/recursive_directory_listing.py:16:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    baseFolderPath,
    ^   | (bad-continuation)
fundamentals/files/recursive_directory_listing.py:17:0: C0330: Wrong hanging indentation before block (add 4 spaces).
    whatToList="all"
    ^   | (bad-continuation)
fundamentals/files/recursive_directory_listing.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/recursive_directory_listing.py:33:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/recursive_directory_listing.py:44:18: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/recursive_directory_listing.py:53:21: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/recursive_directory_listing.py:61:20: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/recursive_directory_listing.py:94:0: C0301: Line too long (140/100) (line-too-long)
fundamentals/files/recursive_directory_listing.py:12:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/files/recursive_directory_listing.py:14:0: C0103: Argument name "baseFolderPath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:14:0: C0103: Argument name "whatToList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:67:4: C0103: Variable name "matchedPathList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:68:4: C0103: Variable name "parentDirectoryList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:75:12: C0103: Variable name "childDirList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:76:16: C0103: Variable name "parentDir" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:79:23: W0703: Catching too general exception Exception (broad-except)
fundamentals/files/recursive_directory_listing.py:78:20: C0103: Variable name "thisDirList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:79:16: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:83:20: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:84:20: C0103: Variable name "fullPath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:86:23: R0123: Comparison to literal (literal-comparison)
fundamentals/files/recursive_directory_listing.py:88:25: R0123: Comparison to literal (literal-comparison)
fundamentals/files/recursive_directory_listing.py:90:25: R0123: Comparison to literal (literal-comparison)
fundamentals/files/recursive_directory_listing.py:104:16: C0103: Variable name "parentDirectoryList" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/recursive_directory_listing.py:12:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.files.list_of_dictionaries_to_mysql_inserts
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:30:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:35:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:52:0: C0301: Line too long (310/100) (line-too-long)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:56:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:16:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:17:0: C0413: Import "from fundamentals.mysql import convert_dictionary_to_mysql_table" should be placed at the top of the module (wrong-import-position)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:19:0: C0103: Argument name "tableName" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:60:7: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:65:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:66:8: C0103: Variable name "insertCommand" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:22:8: W0613: Unused argument 'tableName' (unused-argument)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:9:0: W0611: Unused import sys (unused-import)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:11:0: W0611: Unused import io (unused-import)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:12:0: W0611: Unused import csv (unused-import)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:13:0: W0611: Unused Decimal imported from decimal (unused-import)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:14:0: W0611: Unused datetime imported from datetime (unused-import)
fundamentals/files/list_of_dictionaries_to_mysql_inserts.py:16:0: W0611: Unused tools imported from fundamentals (unused-import)
************* Module fundamentals.files.tag
fundamentals/files/tag.py:29:0: C0301: Line too long (157/100) (line-too-long)
fundamentals/files/tag.py:30:0: C0301: Line too long (130/100) (line-too-long)
fundamentals/files/tag.py:31:0: C0301: Line too long (159/100) (line-too-long)
fundamentals/files/tag.py:32:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/tag.py:37:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/tag.py:53:0: C0303: Trailing whitespace (trailing-whitespace)
fundamentals/files/tag.py:94:0: C0301: Line too long (113/100) (line-too-long)
fundamentals/files/tag.py:111:0: C0301: Line too long (117/100) (line-too-long)
fundamentals/files/tag.py:117:0: C0301: Line too long (115/100) (line-too-long)
fundamentals/files/tag.py:148:0: C0301: Line too long (107/100) (line-too-long)
fundamentals/files/tag.py:150:0: C0301: Line too long (140/100) (line-too-long)
fundamentals/files/tag.py:177:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/files/tag.py:12:0: C0413: Import "from fundamentals import tools" should be placed at the top of the module (wrong-import-position)
fundamentals/files/tag.py:13:0: C0413: Import "from subprocess import Popen, PIPE, STDOUT" should be placed at the top of the module (wrong-import-position)
fundamentals/files/tag.py:14:0: C0413: Import "from datetime import datetime, date, time" should be placed at the top of the module (wrong-import-position)
fundamentals/files/tag.py:15:0: C0413: Import "import codecs" should be placed at the top of the module (wrong-import-position)
fundamentals/files/tag.py:17:0: R0914: Too many local variables (17/15) (too-many-locals)
fundamentals/files/tag.py:60:16: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/files/tag.py:65:7: C0121: Comparison to False should be 'expr' (singleton-comparison)
fundamentals/files/tag.py:68:8: C0103: Variable name "tagPlist" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:71:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:73:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:88:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:96:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:104:7: C0121: Comparison to False should be 'expr' (singleton-comparison)
fundamentals/files/tag.py:106:8: C0103: Variable name "ratingsContainer" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:107:8: C0103: Variable name "ratingPlist" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:113:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:119:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:124:7: C0121: Comparison to False should be 'expr' (singleton-comparison)
fundamentals/files/tag.py:126:11: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
fundamentals/files/tag.py:132:8: C0103: Variable name "urlPlist" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:135:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:137:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:152:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:159:8: C0103: Variable name "urlPlist" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:162:12: C0103: Variable name "writeFile" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:164:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:179:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tag.py:17:0: R1711: Useless return at end of function or method (useless-return)
fundamentals/files/tag.py:19:8: W0613: Unused argument 'filepath' (unused-argument)
fundamentals/files/tag.py:73:8: W0641: Possibly unused variable 'e' (possibly-unused-variable)
fundamentals/files/tag.py:89:8: W0641: Possibly unused variable 'stdout' (possibly-unused-variable)
fundamentals/files/tag.py:89:16: W0641: Possibly unused variable 'stderr' (possibly-unused-variable)
fundamentals/files/tag.py:106:8: W0641: Possibly unused variable 'ratingsContainer' (possibly-unused-variable)
fundamentals/files/tag.py:107:8: W0641: Possibly unused variable 'ratingPlist' (possibly-unused-variable)
fundamentals/files/tag.py:17:0: R0915: Too many statements (76/50) (too-many-statements)
fundamentals/files/tag.py:9:0: W0611: Unused import sys (unused-import)
fundamentals/files/tag.py:12:0: W0611: Unused tools imported from fundamentals (unused-import)
fundamentals/files/tag.py:13:0: W0611: Unused STDOUT imported from subprocess (unused-import)
fundamentals/files/tag.py:14:0: W0611: Unused date imported from datetime (unused-import)
fundamentals/files/tag.py:14:0: W0611: Unused time imported from datetime (unused-import)
fundamentals/files/tag.py:13:0: C0411: standard import "from subprocess import Popen, PIPE, STDOUT" should be placed before "from fundamentals import tools" (wrong-import-order)
fundamentals/files/tag.py:14:0: C0411: standard import "from datetime import datetime, date, time" should be placed before "from fundamentals import tools" (wrong-import-order)
fundamentals/files/tag.py:15:0: C0411: standard import "import codecs" should be placed before "from fundamentals import tools" (wrong-import-order)
************* Module fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:52:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:61:0: C0301: Line too long (114/100) (line-too-long)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:12:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:14:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:15:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:17:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:25:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:25:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:25:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:25:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:28:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:29:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:30:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:30:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:30:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:30:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:35:0: W0702: No exception type(s) specified (bare-except)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:44:0: C0103: Constant name "pathToPickleFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:46:0: C0103: Constant name "listOfDictionaries" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:48:0: C0103: Class name "test_list_of_dictionaries_to_mysql" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:48:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:52:8: C0415: Import outside toplevel (fundamentals.files.list_of_dictionaries_to_mysql_inserts) (import-outside-toplevel)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:53:8: C0103: Variable name "mysqlInserts" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:53:8: W0612: Unused variable 'mysqlInserts' (unused-variable)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:50:4: R0201: Method could be a function (no-self-use)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:61:8: C0415: Import outside toplevel (fundamentals.files.list_of_dictionaries_to_mysql_inserts) (import-outside-toplevel)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:70:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:63:19: E1123: Unexpected keyword argument 'settings' in function call (unexpected-keyword-arg)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:63:19: E1123: Unexpected keyword argument 'fakeKey' in function call (unexpected-keyword-arg)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:63:19: E1120: No value for argument 'datalist' in function call (no-value-for-parameter)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:63:19: E1120: No value for argument 'tableName' in function call (no-value-for-parameter)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:68:12: E1101: Instance of 'str' has no 'get' member (no-member)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:70:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:59:4: R0201: Method could be a function (no-self-use)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:8:0: C0411: standard import "import pickle" should be placed before "import yaml" (wrong-import-order)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:11:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/files/tests/test_list_of_dictionaries_to_mysql_inserts.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.files.tests.test_fileChunker
fundamentals/files/tests/test_fileChunker.py:1:0: C0103: Module name "test_fileChunker" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/files/tests/test_fileChunker.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/files/tests/test_fileChunker.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/files/tests/test_fileChunker.py:43:0: C0103: Constant name "largeFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:45:0: C0103: Class name "test_fileChunker" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:45:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/files/tests/test_fileChunker.py:47:4: C0103: Method name "test_fileChunker_function" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/files/tests/test_fileChunker.py:49:8: C0415: Import outside toplevel (fundamentals.files) (import-outside-toplevel)
fundamentals/files/tests/test_fileChunker.py:50:8: C0103: Variable name "fileIterator" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_fileChunker.py:47:4: R0201: Method could be a function (no-self-use)
fundamentals/files/tests/test_fileChunker.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/files/tests/test_fileChunker.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/files/tests/test_fileChunker.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/files/tests/test_fileChunker.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.files.tests.test_recursive_directory_listing
fundamentals/files/tests/test_recursive_directory_listing.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/files/tests/test_recursive_directory_listing.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/files/tests/test_recursive_directory_listing.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/files/tests/test_recursive_directory_listing.py:43:0: C0103: Class name "test_recursive_directory_listing" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:43:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/files/tests/test_recursive_directory_listing.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/files/tests/test_recursive_directory_listing.py:47:8: C0415: Import outside toplevel (fundamentals.files) (import-outside-toplevel)
fundamentals/files/tests/test_recursive_directory_listing.py:48:8: C0103: Variable name "theseFiles" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:55:8: W0404: Reimport 'recursive_directory_listing' (imported line 47) (reimported)
fundamentals/files/tests/test_recursive_directory_listing.py:55:8: C0415: Import outside toplevel (fundamentals.files) (import-outside-toplevel)
fundamentals/files/tests/test_recursive_directory_listing.py:56:8: C0103: Variable name "theseFiles" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:63:8: W0404: Reimport 'recursive_directory_listing' (imported line 47) (reimported)
fundamentals/files/tests/test_recursive_directory_listing.py:63:8: C0415: Import outside toplevel (fundamentals.files) (import-outside-toplevel)
fundamentals/files/tests/test_recursive_directory_listing.py:64:8: C0103: Variable name "theseFiles" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_recursive_directory_listing.py:48:8: W0612: Unused variable 'theseFiles' (unused-variable)
fundamentals/files/tests/test_recursive_directory_listing.py:45:4: R0201: Method could be a function (no-self-use)
fundamentals/files/tests/test_recursive_directory_listing.py:2:0: W0611: Unused str imported from builtins (unused-import)
fundamentals/files/tests/test_recursive_directory_listing.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/files/tests/test_recursive_directory_listing.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/files/tests/test_recursive_directory_listing.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.files.tests.test_tag
fundamentals/files/tests/test_tag.py:1:0: C0114: Missing module docstring (missing-module-docstring)
fundamentals/files/tests/test_tag.py:6:0: W0404: Reimport 'unittest' (imported line 4) (reimported)
fundamentals/files/tests/test_tag.py:11:0: C0103: Constant name "home" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:13:0: C0103: Constant name "packageDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:14:0: C0103: Constant name "settingsFile" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:16:0: C0103: Constant name "su" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:24:0: C0103: Constant name "arguments" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:24:11: C0103: Constant name "settings" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:24:21: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:24:26: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:27:0: C0103: Constant name "moduleDirectory" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:28:0: C0103: Constant name "utKit" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:29:0: C0103: Constant name "log" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:29:5: C0103: Constant name "dbConn" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:29:13: C0103: Constant name "pathToInputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:29:29: C0103: Constant name "pathToOutputDir" doesn't conform to UPPER_CASE naming style (invalid-name)
fundamentals/files/tests/test_tag.py:34:0: W0702: No exception type(s) specified (bare-except)
fundamentals/files/tests/test_tag.py:45:0: C0103: Class name "test_tag" doesn't conform to PascalCase naming style (invalid-name)
fundamentals/files/tests/test_tag.py:45:0: C0115: Missing class docstring (missing-class-docstring)
fundamentals/files/tests/test_tag.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/files/tests/test_tag.py:49:8: C0415: Import outside toplevel (fundamentals.files.tag) (import-outside-toplevel)
fundamentals/files/tests/test_tag.py:47:4: R0201: Method could be a function (no-self-use)
fundamentals/files/tests/test_tag.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
fundamentals/files/tests/test_tag.py:60:8: C0415: Import outside toplevel (fundamentals.files) (import-outside-toplevel)
fundamentals/files/tests/test_tag.py:67:15: W0703: Catching too general exception Exception (broad-except)
fundamentals/files/tests/test_tag.py:62:12: E1128: Assigning result of a function call, where the function returns None (assignment-from-none)
fundamentals/files/tests/test_tag.py:62:19: E1123: Unexpected keyword argument 'fakeKey' in function call (unexpected-keyword-arg)
fundamentals/files/tests/test_tag.py:62:19: E1120: No value for argument 'filepath' in function call (no-value-for-parameter)
fundamentals/files/tests/test_tag.py:67:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
fundamentals/files/tests/test_tag.py:62:12: W0612: Unused variable 'this' (unused-variable)
fundamentals/files/tests/test_tag.py:58:4: R0201: Method could be a function (no-self-use)
fundamentals/files/tests/test_tag.py:7:0: W0611: Unused import yaml (unused-import)
fundamentals/files/tests/test_tag.py:10:0: C0411: standard import "from os.path import expanduser" should be placed before "import yaml" (wrong-import-order)
fundamentals/files/tests/test_tag.py:6:0: C0412: Imports from package unittest are not grouped (ungrouped-imports)
************* Module fundamentals.commonutils.getpackagepath
fundamentals/commonutils/getpackagepath.py:17:4: C0103: Variable name "moduleDirectory" doesn't conform to snake_case naming style (invalid-name)
fundamentals/commonutils/getpackagepath.py:18:4: C0103: Variable name "packagePath" doesn't conform to snake_case naming style (invalid-name)
fundamentals/commonutils/getpackagepath.py:17:4: W0612: Unused variable 'moduleDirectory' (unused-variable)
************* Module fundamentals.commonutils.__init__
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 7 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)

# class test__fetch(unittest.TestCase):

#     def test__fetch_function(self):
#         kwargs = {}
#         kwargs["log"] = log
#         kwargs["settings"] = settings
#         # xt-kwarg_key_and_value

#         testObject = _fetch(**kwargs)
#         testObject.get()

# x-print-testpage-for-pessto-marshall-web-object

# x-class-to-test-named-worker-function (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 8 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)

# class test__fetch(unittest.TestCase):

#     def test__fetch_function(self): (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 11 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.files.tests.test_tag:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.mysql.tests.test_sqlite2mysql:0
==fundamentals.mysql.tests.test_yaml_to_database:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)

# shutil.copytree(pathToInputDir + "/mysql_scripts",
#                 pathToOutputDir + "/mysql_scripts") (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 20 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.files.tests.test_fileChunker:0
==fundamentals.files.tests.test_recursive_directory_listing:0
==fundamentals.files.tests.test_tag:0
==fundamentals.mysql.tests.test_database:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.mysql.tests.test_get_database_table_column_names:0
==fundamentals.mysql.tests.test_readquery:0
==fundamentals.mysql.tests.test_setup_database_connection:0
==fundamentals.mysql.tests.test_sqlite2mysql:0
==fundamentals.mysql.tests.test_table_exists:0
==fundamentals.mysql.tests.test_writequery:0
==fundamentals.mysql.tests.test_yaml_to_database:0
==fundamentals.tests.test_logs:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 21 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_append_now_datestamp_to_filename:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.files.tests.test_fileChunker:0
==fundamentals.files.tests.test_recursive_directory_listing:0
==fundamentals.files.tests.test_tag:0
==fundamentals.mysql.tests.test_database:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.mysql.tests.test_get_database_table_column_names:0
==fundamentals.mysql.tests.test_readquery:0
==fundamentals.mysql.tests.test_setup_database_connection:0
==fundamentals.mysql.tests.test_sqlite2mysql:0
==fundamentals.mysql.tests.test_table_exists:0
==fundamentals.mysql.tests.test_writequery:0
==fundamentals.mysql.tests.test_yaml_to_database:0
==fundamentals.tests.test_logs:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:8
==fundamentals.renderer.tests.test_list_of_dictionaries:8
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)

pathToPickleFile = pathToInputDir + "/list-of-dictionaries.p"

listOfDictionaries = pickle.load(open(pathToPickleFile, "rb"))
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 21 files
==fundamentals.download.tests.test__dump_files_to_local_drive:6
==fundamentals.download.tests.test__fetch:6
==fundamentals.download.tests.test_extract_filename_from_url:6
==fundamentals.download.tests.test_get_now_datetime_filestamp:6
==fundamentals.download.tests.test_multiobject_download:6
==fundamentals.files.tests.test_fileChunker:6
==fundamentals.files.tests.test_recursive_directory_listing:6
==fundamentals.files.tests.test_tag:6
==fundamentals.mysql.tests.test_database:6
==fundamentals.mysql.tests.test_directory_script_runner:6
==fundamentals.mysql.tests.test_get_database_table_column_names:6
==fundamentals.mysql.tests.test_readquery:6
==fundamentals.mysql.tests.test_setup_database_connection:6
==fundamentals.mysql.tests.test_sqlite2mysql:6
==fundamentals.mysql.tests.test_table_exists:6
==fundamentals.mysql.tests.test_writequery:6
==fundamentals.mysql.tests.test_yaml_to_database:6
==fundamentals.renderer.tests.test_list_of_dictionaries:7
==fundamentals.tests.test_logs:6
==fundamentals.tests.test_times:6
==fundamentals.tests.test_utKit:6
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 24 files
==fundamentals.download.tests.test__dump_files_to_local_drive:7
==fundamentals.download.tests.test__fetch:7
==fundamentals.download.tests.test_extract_filename_from_url:7
==fundamentals.download.tests.test_get_now_datetime_filestamp:7
==fundamentals.download.tests.test_multiobject_download:7
==fundamentals.files.tests.test_fileChunker:7
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:8
==fundamentals.files.tests.test_recursive_directory_listing:7
==fundamentals.files.tests.test_tag:7
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:8
==fundamentals.mysql.tests.test_database:7
==fundamentals.mysql.tests.test_directory_script_runner:7
==fundamentals.mysql.tests.test_get_database_table_column_names:7
==fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables:8
==fundamentals.mysql.tests.test_readquery:7
==fundamentals.mysql.tests.test_setup_database_connection:7
==fundamentals.mysql.tests.test_sqlite2mysql:7
==fundamentals.mysql.tests.test_table_exists:7
==fundamentals.mysql.tests.test_writequery:7
==fundamentals.mysql.tests.test_yaml_to_database:7
==fundamentals.renderer.tests.test_list_of_dictionaries:8
==fundamentals.tests.test_logs:7
==fundamentals.tests.test_times:7
==fundamentals.tests.test_utKit:7
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.download.tests.test_append_now_datestamp_to_filename:6
==fundamentals.renderer.tests.test_list_of_dictionaries:7
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 4 files
==fundamentals.download.tests.test_append_now_datestamp_to_filename:7
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:8
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:8
==fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables:8
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 12 files
==fundamentals.download.tests.test__dump_files_to_local_drive:10
==fundamentals.download.tests.test__fetch:10
==fundamentals.download.tests.test_extract_filename_from_url:10
==fundamentals.download.tests.test_get_now_datetime_filestamp:10
==fundamentals.download.tests.test_multiobject_download:10
==fundamentals.files.tests.test_tag:10
==fundamentals.mysql.tests.test_directory_script_runner:10
==fundamentals.mysql.tests.test_sqlite2mysql:10
==fundamentals.mysql.tests.test_yaml_to_database:10
==fundamentals.tests.test_fmultiprocess:12
==fundamentals.tests.test_times:10
==fundamentals.tests.test_utKit:10
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)

# xt-setup-unit-testing-files-and-folders
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 14 files
==fundamentals.files.tests.test_fileChunker:10
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:11
==fundamentals.files.tests.test_recursive_directory_listing:10
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:11
==fundamentals.mysql.tests.test_database:10
==fundamentals.mysql.tests.test_get_database_table_column_names:10
==fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables:11
==fundamentals.mysql.tests.test_readquery:10
==fundamentals.mysql.tests.test_setup_database_connection:10
==fundamentals.mysql.tests.test_table_exists:10
==fundamentals.mysql.tests.test_writequery:10
==fundamentals.renderer.tests.test_list_of_dictionaries:11
==fundamentals.tests.test_fmultiprocess:12
==fundamentals.tests.test_logs:10
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir)
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.download.tests.test_append_now_datestamp_to_filename:10
==fundamentals.tests.test_fmultiprocess:12
home = expanduser("~")

packageDirectory = utKit("").get_project_root()
settingsFile = packageDirectory + "/test_settings.yaml"
# settingsFile = home + "/.config/soxspipe.recipes/soxspipe.recipes.yaml"
su = tools(
    arguments={"settingsFile": settingsFile},
    docString=__doc__,
    logLevel="DEBUG",
    options_first=False,
    projectName=None,
    defaultSettingsFile=False
)
arguments, settings, log, dbConn = su.setup()

# SETUP AND TEARDOWN FIXTURE FUNCTIONS FOR THE ENTIRE MODULE
moduleDirectory = os.path.dirname(__file__)
utKit = utKit(moduleDirectory)
log, dbConn, pathToInputDir, pathToOutputDir = utKit.setupModule()
utKit.tearDownModule()

try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)

# Recursively create missing directories
if not os.path.exists(pathToOutputDir):
    os.makedirs(pathToOutputDir) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.mysql.sqlite2mysql:28
==fundamentals.mysql.yaml_to_database:38
def main(arguments=None):
    """
    The main function used when ``yaml_to_database.py`` when installed as a cl tool
    """

    # setup the command-line util settings
    su = tools(
        arguments=arguments,
        docString=__doc__,
        logLevel="WARNING",
        options_first=False,
        projectName=False
    )
    arguments, settings, log, dbConn = su.setup()

    # unpack remaining cl arguments using `exec` to setup the variable names
    # automatically
    for arg, val in list(arguments.items()):
        if arg[0] == "-":
            varname = arg.replace("-", "") + "Flag"
        else:
            varname = arg.replace("<", "").replace(">", "")
        if isinstance(val, str):
            exec(varname + " = '%s'" % (val,))
        else:
            exec(varname + " = %s" % (val,))
        if arg == "--dbConn":
            dbConn = val
        log.debug('%s = %s' % (varname, val,))
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:63
==fundamentals.tests.test_fmultiprocess:80
                log=log,
                settings=settings,
                fakeKey="break the code"
            )
            this.get()
            assert False
        except Exception as e:
            assert True
            print(str(e))

        # x-print-testpage-for-pessto-marshall-web-object

    # x-class-to-test-named-worker-function (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.directory_script_runner:213
==fundamentals.mysql.sqlite2mysql:28
==fundamentals.mysql.yaml_to_database:38
def main(arguments=None):
    """
    The main function used when ``yaml_to_database.py`` when installed as a cl tool
    """

    # setup the command-line util settings
    su = tools(
        arguments=arguments,
        docString=__doc__,
        logLevel="WARNING",
        options_first=False, (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.tests.test_sqlite2mysql:68
==fundamentals.mysql.tests.test_yaml_to_database:86
==fundamentals.renderer.tests.test_list_of_dictionaries:118
                fakeKey="break the code"
            )
            this.get()
            assert False
        except Exception as e:
            assert True
            # print(str(e))

        # x-print-testpage-for-pessto-marshall-web-object

    # x-class-to-test-named-worker-function (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:73
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:99
==fundamentals.mysql.tests.test_table_exists:46
        from fundamentals.mysql import writequery
        sqlQuery = "CREATE TABLE IF NOT EXISTS `testing_table` (`id` INT NOT NULL, PRIMARY KEY (`id`))"
        writequery(
            log=log,
            sqlQuery=sqlQuery,
            dbConn=dbConn,
            Force=False,
            manyValueList=False
        )
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.mysql.tests.test_table_exists:65
==fundamentals.mysql.tests.test_writequery:80
        from fundamentals.mysql import writequery
        sqlQuery = "DROP TABLE `testing_table`;"
        writequery(
            log=log,
            sqlQuery=sqlQuery,
            dbConn=dbConn,
            Force=False,
            manyValueList=False
        )
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.directory_script_runner:225
==fundamentals.mysql.sqlite2mysql:40
==fundamentals.mysql.yaml_to_database:50
    )
    arguments, settings, log, dbConn = su.setup()

    # unpack remaining cl arguments using `exec` to setup the variable names
    # automatically
    for arg, val in list(arguments.items()):
        if arg[0] == "-":
            varname = arg.replace("-", "") + "Flag"
        else:
            varname = arg.replace("<", "").replace(">", "") (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 22 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_append_now_datestamp_to_filename:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.files.tests.test_fileChunker:0
==fundamentals.files.tests.test_recursive_directory_listing:0
==fundamentals.files.tests.test_tag:0
==fundamentals.mysql.tests.test_database:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.mysql.tests.test_get_database_table_column_names:0
==fundamentals.mysql.tests.test_readquery:0
==fundamentals.mysql.tests.test_setup_database_connection:0
==fundamentals.mysql.tests.test_sqlite2mysql:0
==fundamentals.mysql.tests.test_table_exists:0
==fundamentals.mysql.tests.test_writequery:0
==fundamentals.mysql.tests.test_yaml_to_database:0
==fundamentals.tests.test_fmultiprocess:0
==fundamentals.tests.test_logs:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml
from fundamentals.utKit import utKit
from fundamentals import tools
from os.path import expanduser (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 8 files
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:101
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:50
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:75
==fundamentals.mysql.tests.test_table_exists:48
==fundamentals.mysql.tests.test_table_exists:67
==fundamentals.mysql.tests.test_writequery:48
==fundamentals.mysql.tests.test_writequery:59
==fundamentals.mysql.tests.test_writequery:82
        writequery(
            log=log,
            sqlQuery=sqlQuery,
            dbConn=dbConn,
            Force=False,
            manyValueList=False
        )
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 15 files
==fundamentals.files.tests.test_fileChunker:31
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:32
==fundamentals.files.tests.test_recursive_directory_listing:31
==fundamentals.files.tests.test_tag:31
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:32
==fundamentals.mysql.tests.test_database:31
==fundamentals.mysql.tests.test_directory_script_runner:31
==fundamentals.mysql.tests.test_get_database_table_column_names:31
==fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables:32
==fundamentals.mysql.tests.test_readquery:31
==fundamentals.mysql.tests.test_setup_database_connection:31
==fundamentals.mysql.tests.test_sqlite2mysql:31
==fundamentals.mysql.tests.test_table_exists:31
==fundamentals.mysql.tests.test_writequery:31
==fundamentals.mysql.tests.test_yaml_to_database:49
try:
    shutil.rmtree(pathToOutputDir)
except:
    pass
# COPY INPUT TO OUTPUT DIR
shutil.copytree(pathToInputDir, pathToOutputDir)
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.directory_script_runner:236
==fundamentals.mysql.sqlite2mysql:51
==fundamentals.mysql.yaml_to_database:61
            exec(varname + " = '%s'" % (val,))
        else:
            exec(varname + " = %s" % (val,))
        if arg == "--dbConn":
            dbConn = val
        log.debug('%s = %s' % (varname, val,))
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 25 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_append_now_datestamp_to_filename:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.files.tests.test_fileChunker:0
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:0
==fundamentals.files.tests.test_recursive_directory_listing:0
==fundamentals.files.tests.test_tag:0
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:0
==fundamentals.mysql.tests.test_database:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.mysql.tests.test_get_database_table_column_names:0
==fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables:0
==fundamentals.mysql.tests.test_readquery:0
==fundamentals.mysql.tests.test_setup_database_connection:0
==fundamentals.mysql.tests.test_sqlite2mysql:0
==fundamentals.mysql.tests.test_table_exists:0
==fundamentals.mysql.tests.test_writequery:0
==fundamentals.mysql.tests.test_yaml_to_database:0
==fundamentals.tests.test_fmultiprocess:0
==fundamentals.tests.test_logs:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest
import yaml (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.mysql.setup_database_connection:9
==fundamentals.tools:11
import sys
import os
import yaml
try:
    yaml.warnings({'YAMLLoadWarning': False})
except:
    pass (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.logs:138
==fundamentals.tools:24
    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO
    from os.path import expanduser

    # IMPORT CUSTOM HANDLER THAT ALLOWS GROUP WRITING (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.mysql.get_database_table_column_names:9
==fundamentals.mysql.table_exists:8
import sys
import os
os.environ['TERM'] = 'vt100'
from fundamentals import tools
from fundamentals.mysql import readquery
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 5 files
==fundamentals.download._dump_files_to_local_drive:8
==fundamentals.download._fetch:11
==fundamentals.download.append_now_datestamp_to_filename:8
==fundamentals.download.extract_filename_from_url:8
==fundamentals.mysql.readquery:8
from builtins import str
import sys
import os
os.environ['TERM'] = 'vt100'
from fundamentals import tools
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 5 files
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:65
==fundamentals.mysql.tests.test_sqlite2mysql:68
==fundamentals.mysql.tests.test_yaml_to_database:86
==fundamentals.renderer.tests.test_list_of_dictionaries:118
==fundamentals.tests.test_fmultiprocess:82
                fakeKey="break the code"
            )
            this.get()
            assert False
        except Exception as e:
            assert True (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 26 files
==fundamentals.download.tests.test__dump_files_to_local_drive:0
==fundamentals.download.tests.test__fetch:0
==fundamentals.download.tests.test_append_now_datestamp_to_filename:0
==fundamentals.download.tests.test_extract_filename_from_url:0
==fundamentals.download.tests.test_get_now_datetime_filestamp:0
==fundamentals.download.tests.test_multiobject_download:0
==fundamentals.files.tests.test_fileChunker:0
==fundamentals.files.tests.test_list_of_dictionaries_to_mysql_inserts:0
==fundamentals.files.tests.test_recursive_directory_listing:0
==fundamentals.files.tests.test_tag:0
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:0
==fundamentals.mysql.tests.test_database:0
==fundamentals.mysql.tests.test_directory_script_runner:0
==fundamentals.mysql.tests.test_get_database_table_column_names:0
==fundamentals.mysql.tests.test_insert_list_of_dictionaries_into_database_tables:0
==fundamentals.mysql.tests.test_readquery:0
==fundamentals.mysql.tests.test_setup_database_connection:0
==fundamentals.mysql.tests.test_sqlite2mysql:0
==fundamentals.mysql.tests.test_table_exists:0
==fundamentals.mysql.tests.test_writequery:0
==fundamentals.mysql.tests.test_yaml_to_database:0
==fundamentals.renderer.tests.test_list_of_dictionaries:0
==fundamentals.tests.test_fmultiprocess:0
==fundamentals.tests.test_logs:0
==fundamentals.tests.test_times:0
==fundamentals.tests.test_utKit:0
from __future__ import print_function
from builtins import str
import os
import unittest
import shutil
import unittest (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.files.list_of_dictionaries_to_mysql_inserts:12
==fundamentals.renderer.list_of_dictionaries:19
from decimal import Decimal
from datetime import datetime
os.environ['TERM'] = 'vt100'
from fundamentals import tools
from fundamentals.mysql import convert_dictionary_to_mysql_table
 (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.cl_utils:15
==fundamentals.mysql.database:9
import sys
import os
os.environ['TERM'] = 'vt100'
import readline
import glob
import pickle (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.database:172
==fundamentals.tools:450
==fundamentals.tools:482
                time.sleep(1)
                count += 1
                if count == 5:
                    self.log.error(
                        'cound not setup tunnel to remote datbase' % locals())
                    sys.exit(0) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.files.tests.test_tag:63
==fundamentals.mysql.tests.test_directory_script_runner:113
                fakeKey="break the code"
            )
            assert False
        except Exception as e:
            assert True (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.files.list_of_dictionaries_to_mysql_inserts:70
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:135
            dateModified=False,
            returnInsertOnly=True,
            replace=True,
            batchInserts=False
        ) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 6 files
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:101
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:50
==fundamentals.mysql.tests.test_convert_dictionary_to_mysql_table:75
==fundamentals.mysql.tests.test_table_exists:48
==fundamentals.mysql.tests.test_table_exists:67
==fundamentals.mysql.tests.test_writequery:69
        writequery(
            log=log,
            sqlQuery=sqlQuery,
            dbConn=dbConn,
            Force=False, (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.tests.test_yaml_to_database:56
==fundamentals.mysql.tests.test_yaml_to_database:69
==fundamentals.mysql.yaml_to_database:84
        from fundamentals.mysql import yaml_to_database
        yaml2db = yaml_to_database(
            log=log,
            settings=settings,
            dbConn=dbConn, (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 8 files
==fundamentals.download._dump_files_to_local_drive:8
==fundamentals.download._fetch:11
==fundamentals.download.append_now_datestamp_to_filename:8
==fundamentals.download.extract_filename_from_url:8
==fundamentals.download.multiobject_download:14
==fundamentals.mysql.get_database_table_column_names:8
==fundamentals.mysql.readquery:8
==fundamentals.mysql.writequery:8
from builtins import str
import sys
import os
os.environ['TERM'] = 'vt100'
from fundamentals import tools (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.fmultiprocess:9
==fundamentals.mysql.insert_list_of_dictionaries_into_database_tables:12
from past.utils import old_div
import sys
import os
os.environ['TERM'] = 'vt100'
from fundamentals import tools (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 4 files
==fundamentals.cl_utils:35
==fundamentals.mysql.directory_script_runner:219
==fundamentals.mysql.sqlite2mysql:34
==fundamentals.mysql.yaml_to_database:44
    su = tools(
        arguments=arguments,
        docString=__doc__,
        logLevel="WARNING",
        options_first=False, (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 3 files
==fundamentals.mysql.database:120
==fundamentals.tools:398
==fundamentals.tools:502
            local_infile=1,
            client_flag=ms.constants.CLIENT.MULTI_STATEMENTS,
            connect_timeout=36000,
            max_allowed_packet=51200000
        ) (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 2 files
==fundamentals.mysql.database:112
==fundamentals.tools:391
            dbConn = ms.connect(
                host=host,
                user=user,
                passwd=passwd,
                db=dbName, (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 4 files
==fundamentals.mysql.directory_script_runner:236
==fundamentals.mysql.sqlite2mysql:51
==fundamentals.mysql.yaml_to_database:61
==fundamentals.tools:353
            exec(varname + " = '%s'" % (val,))
        else:
            exec(varname + " = %s" % (val,))
        if arg == "--dbConn":
            dbConn = val (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 4 files
==fundamentals.logs:46
==fundamentals.mysql.setup_database_connection:11
==fundamentals.tools:13
==fundamentals.utKit:13
import yaml
try:
    yaml.warnings({'YAMLLoadWarning': False})
except:
    pass (duplicate-code)
fundamentals/commonutils/__init__.py:1:0: R0801: Similar lines in 5 files
==fundamentals.cl_utils:53
==fundamentals.mysql.directory_script_runner:230
==fundamentals.mysql.sqlite2mysql:45
==fundamentals.mysql.yaml_to_database:55
==fundamentals.tools:344
    for arg, val in list(arguments.items()):
        if arg[0] == "-":
            varname = arg.replace("-", "") + "Flag"
        else:
            varname = arg.replace("<", "").replace(">", "") (duplicate-code)

-----------------------------------
Your code has been rated at 1.88/10

